{
  "openapi": "3.0.2",
  "info": {
    "title": "Especial Email API",
    "description": "The Especial Email API exposes multiple APIs including Authentication, Marketing, Contact, Transactional, Analytic, Content, Account and Partner.",
    "version": "1.12.14"
  },
  "servers": [{ "url": "https://api.cakemail.dev" }],
  "paths": {
    "/accounts/self": {
      "get": {
        "tags": ["Account"],
        "summary": "Show my account details",
        "operationId": "getSelfAccount",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Account"],
        "summary": "Update my account",
        "operationId": "patchSelfAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchSelfAccount" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/actions": {
      "get": {
        "tags": ["Action"],
        "summary": "List actions",
        "operationId": "listActions",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ActionsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Action"],
        "summary": "Create an action",
        "operationId": "createAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Action" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/actions/{action_id}": {
      "get": {
        "tags": ["Action"],
        "summary": "Get an action",
        "operationId": "getAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetActionResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Action"],
        "summary": "Delete an action",
        "operationId": "deleteAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Action"],
        "summary": "Update an action",
        "operationId": "patchAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchAction" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchActionResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/actions/{action_id}/render": {
      "get": {
        "tags": ["Action"],
        "summary": "Render an action",
        "operationId": "renderAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/html": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/actions/{action_id}/send-test": {
      "post": {
        "tags": ["Action"],
        "summary": "Send a test of an action",
        "operationId": "sendTestAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendTestAction" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTestActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns": {
      "get": {
        "tags": ["Campaign"],
        "summary": "Show all campaigns",
        "operationId": "listCampaigns",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `name`\n  - `type`\n  - `list_id`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `name`\n  - `type`\n  - `list_id`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`\n  - `scheduled_for`\n  - `scheduled_on`\n  - `updated_on`\n  - `type`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`\n  - `scheduled_for`\n  - `scheduled_on`\n  - `updated_on`\n  - `type`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Campaign"],
        "summary": "Create a campaign",
        "operationId": "createCampaign",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCampaign" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}": {
      "get": {
        "tags": ["Campaign"],
        "summary": "Show a campaign details",
        "operationId": "getCampaign",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "revision_id", "type": "integer" },
            "name": "revision_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Campaign"],
        "summary": "Delete a campaign",
        "operationId": "deleteCampaign",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Campaign"],
        "summary": "Update a campaign",
        "operationId": "patchCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchCampaign" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/render": {
      "get": {
        "tags": ["Campaign"],
        "summary": "Render a campaign",
        "operationId": "renderCampaign",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenderCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/send-test": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Send a test email",
        "operationId": "sendTestEmail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendTestEmail" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTestEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/schedule": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Schedule a campaign",
        "operationId": "scheduleCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ScheduleCampaign" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/unschedule": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Unschedule a campaign",
        "operationId": "unscheduleCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/reschedule": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Reschedule a campaign",
        "operationId": "rescheduleCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ScheduleCampaign" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/suspend": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Suspend a campaign",
        "operationId": "suspendCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuspendCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/resume": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Resume a campaign",
        "operationId": "resumeCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/cancel": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Cancel a campaign",
        "operationId": "cancelCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/archive": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Archive a campaign",
        "description": "You can only delete a campaign when the status is draft. However, if you want to remove a campaign from your list of active campaigns, you can archive it.",
        "operationId": "archiveCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/unarchive": {
      "post": {
        "tags": ["Campaign"],
        "summary": "Unarchive a campaign",
        "operationId": "unarchiveCampaign",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/revisions": {
      "get": {
        "tags": ["Campaign"],
        "summary": "Show all campaign revisions",
        "operationId": "getCampaignRevisions",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRevisionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaign-blueprints": {
      "get": {
        "tags": ["Campaign Blueprint"],
        "summary": "Show all campaign blueprints",
        "operationId": "listCampaignBlueprints",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `tag`\n  - `name`\n  - `is_owner`\n  - `is_not_owner`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `tag`\n  - `name`\n  - `is_owner`\n  - `is_not_owner`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `created_on`\n  - `updated_on`\n  - `name`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `created_on`\n  - `updated_on`\n  - `name`",
              "default": "id"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignBlueprintsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/campaign-blueprints/{blueprint_id}": {
      "get": {
        "tags": ["Campaign Blueprint"],
        "summary": "Get a campaign blueprint",
        "operationId": "getCampaignBlueprint",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "blueprint_id", "type": "integer" },
            "name": "blueprint_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignBlueprintResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/campaign-blueprints/{blueprint_id}/render": {
      "get": {
        "tags": ["Campaign Blueprint"],
        "summary": "Render campaign blueprint",
        "operationId": "renderCampaignBlueprint",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "blueprint_id", "type": "integer" },
            "name": "blueprint_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/html": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/lists/{list_id}/contacts/add-interests": {
      "post": {
        "tags": ["Contact"],
        "summary": "Add interest(s) to contact(s)",
        "operationId": "addInterestsToContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInterestsToContacts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddInterestsToMultipleContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts": {
      "get": {
        "tags": ["Contact"],
        "summary": "Show contacts of a list",
        "operationId": "listContactsOfList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "minimum": 1.0, "type": "integer" },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "SQL selection query (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "query",
              "type": "string",
              "description": "SQL selection query (only use one of query, fiql and json)"
            },
            "name": "query",
            "in": "query"
          },
          {
            "description": "FIQL selection expression (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "fiql",
              "type": "string",
              "description": "FIQL selection expression (only use one of query, fiql and json)"
            },
            "name": "fiql",
            "in": "query"
          },
          {
            "description": "JSON selection expression (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "json",
              "type": "string",
              "description": "JSON selection expression (only use one of query, fiql and json)",
              "format": "json-string"
            },
            "name": "json",
            "in": "query"
          },
          {
            "description": "Cursor pagination",
            "required": false,
            "schema": {
              "title": "cursor",
              "type": "string",
              "description": "Cursor pagination"
            },
            "name": "cursor",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `email`\n  - `status`\n  - `subscribed_on`\n  - `last_bounce_type`\n  - `bounces_count`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `email`\n  - `status`\n  - `subscribed_on`\n  - `last_bounce_type`\n  - `bounces_count`"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Contact"],
        "summary": "Add a contact",
        "operationId": "createContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [{ "$ref": "#/components/schemas/DoubleOptIn" }],
              "default": "false",
              "title": "send_double_opt_in"
            },
            "name": "send_double_opt_in",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "resubscribe",
              "type": "boolean",
              "default": true
            },
            "name": "resubscribe",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Contact" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/segments/{segment_id}/contacts": {
      "get": {
        "tags": ["Contact"],
        "summary": "Show contacts of a segment",
        "operationId": "listContactsOfSegment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "segment_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "segment_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "minimum": 1.0, "type": "integer" },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "SQL selection query (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "query",
              "type": "string",
              "description": "SQL selection query (only use one of query, fiql and json)"
            },
            "name": "query",
            "in": "query"
          },
          {
            "description": "FIQL selection expression (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "fiql",
              "type": "string",
              "description": "FIQL selection expression (only use one of query, fiql and json)"
            },
            "name": "fiql",
            "in": "query"
          },
          {
            "description": "JSON selection expression (only use one of query, fiql and json)",
            "required": false,
            "schema": {
              "title": "json",
              "type": "string",
              "description": "JSON selection expression (only use one of query, fiql and json)",
              "format": "json-string"
            },
            "name": "json",
            "in": "query"
          },
          {
            "description": "Cursor pagination",
            "required": false,
            "schema": {
              "title": "cursor",
              "type": "string",
              "description": "Cursor pagination"
            },
            "name": "cursor",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `email`\n  - `status`\n  - `subscribed_on`\n  - `last_bounce_type`\n  - `bounces_count`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `email`\n  - `status`\n  - `subscribed_on`\n  - `last_bounce_type`\n  - `bounces_count`"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/tag": {
      "post": {
        "tags": ["Contact"],
        "summary": "Tags multiple contacts",
        "operationId": "tagMultipleContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagMultipleContacts" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagMultipleContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/untag": {
      "post": {
        "tags": ["Contact"],
        "summary": "Untags multiple contacts",
        "operationId": "untagMultipleContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UntagMultipleContacts" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UntagMultipleContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/{contact_id}": {
      "get": {
        "tags": ["Contact"],
        "summary": "Show a contact details",
        "operationId": "getContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Contact"],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Contact"],
        "summary": "Update a contact",
        "operationId": "patchContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchContact" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/import-contacts": {
      "post": {
        "tags": ["Contact"],
        "summary": "Import contacts",
        "description": "Synchronize your own list with Especialmail by importing to your active, unsubscribed or delete contacts.",
        "operationId": "importContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [{ "$ref": "#/components/schemas/DoubleOptIn" }],
              "default": "false",
              "title": "send_double_opt_in"
            },
            "name": "send_double_opt_in",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportContacts" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/{contact_id}/unsubscribe": {
      "post": {
        "tags": ["Contact"],
        "summary": "Unsubscribe a contact from a list",
        "operationId": "unsubscribeContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/{contact_id}/tag": {
      "post": {
        "tags": ["Contact"],
        "summary": "Tags a contact",
        "operationId": "tagContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tags" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagContactResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/{contact_id}/untag": {
      "post": {
        "tags": ["Contact"],
        "summary": "Untags a contact",
        "operationId": "untagContact",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "contact_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "contact_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tags" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UntagContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/contacts/remove-interests": {
      "post": {
        "tags": ["Contact"],
        "summary": "Remove interest(s) from contact(s)",
        "operationId": "removeInterestsFromContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveInterestsFromContacts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveInterestsFromMultipleContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/custom-attributes": {
      "get": {
        "tags": ["Custom Attribute"],
        "summary": "Show all custom attributes",
        "operationId": "listCustomAttributes",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Custom Attribute"],
        "summary": "Create a custom attribute",
        "operationId": "createCustomAttribute",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCustomAttribute" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAttributeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/custom-attributes/{name}": {
      "get": {
        "tags": ["Custom Attribute"],
        "summary": "Show a custom attribute",
        "operationId": "getCustomAttribute",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "name", "type": "string" },
            "name": "name",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Custom Attribute"],
        "summary": "Delete a custom attribute",
        "operationId": "deleteCustomAttribute",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "name", "type": "string" },
            "name": "name",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomAttributeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/dkim": {
      "get": {
        "tags": ["DKIM"],
        "summary": "List Dkim Keys",
        "operationId": "list_dkim_keys_brands_default_dkim_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DkimKeysResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["DKIM"],
        "summary": "Create Dkim Key",
        "operationId": "create_dkim_key_brands_default_dkim_post",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateDkim" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateDkimResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/dkim/{id}": {
      "get": {
        "tags": ["DKIM"],
        "summary": "Get Dkim Key",
        "operationId": "get_dkim_key_brands_default_dkim__id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DkimKeyResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["DKIM"],
        "summary": "Delete Dkim Key",
        "operationId": "delete_dkim_key_brands_default_dkim__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "id", "type": "integer" },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDkimKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/domains/default": {
      "get": {
        "tags": ["Domain"],
        "summary": "Show domains",
        "description": "Show the Tracking and Bounce domains.",
        "operationId": "showDomains",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DomainsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Domain"],
        "summary": "Change domains",
        "description": "Change the Tracking and Bounce domains.",
        "operationId": "patchDomains",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchDomains" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchDomainsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/domains/default/validate": {
      "get": {
        "tags": ["Domain"],
        "summary": "Validate domains",
        "description": "Validate and return the DNS entries for the Tracking and the Bounce domains.",
        "operationId": "validateDomains",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateDomainsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/emails": {
      "post": {
        "tags": ["Transactional Email"],
        "summary": "Send a transactional email",
        "operationId": "sendEmail",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Email" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SendEmailResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/forms": {
      "get": {
        "tags": ["Form"],
        "summary": "Show all forms",
        "operationId": "listForms",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `language`\n  - `created_on`\n  - `last_updated_on`\n  - `list_id`\n  - `status`",
            "required": false,
            "schema": {
              "title": "sort",
              "pattern": "[-|+]?[a-zA-Z_]+",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `language`\n  - `created_on`\n  - `last_updated_on`\n  - `list_id`\n  - `status`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Form"],
        "summary": "Create a form",
        "operationId": "createForm",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateForm" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateFormResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/forms/{form_id}": {
      "get": {
        "tags": ["Form"],
        "summary": "Show a form details",
        "operationId": "getForm",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "form_id", "type": "string" },
            "name": "form_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Form"],
        "summary": "Delete a form",
        "operationId": "deleteForm",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "form_id", "type": "string" },
            "name": "form_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteFormResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Form"],
        "summary": "Update a form",
        "operationId": "patchForm",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "form_id", "type": "string" },
            "name": "form_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchForm" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchFormResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/links/{link_id}": {
      "get": {
        "tags": ["Links"],
        "summary": "Show a link information",
        "operationId": "getLink",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "link_id", "type": "integer" },
            "name": "link_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LinkInfoResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/campaigns/{campaign_id}/links": {
      "get": {
        "tags": ["Campaign"],
        "summary": "Show a campaign links",
        "operationId": "listLinks",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LinksResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/actions/{action_id}/links": {
      "get": {
        "tags": ["Action"],
        "summary": "Show action links",
        "operationId": "listActionLinks",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LinksResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists": {
      "get": {
        "tags": ["List"],
        "summary": "Show all lists",
        "operationId": "listLists",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `name`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `name`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["List"],
        "summary": "Create a List",
        "operationId": "createList",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/List" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateListResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}": {
      "get": {
        "tags": ["List"],
        "summary": "Show a list parameters",
        "operationId": "getList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["List"],
        "summary": "Delete a List",
        "operationId": "deleteList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteListResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["List"],
        "summary": "Update a list parameters",
        "operationId": "patchList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateList" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchListResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/accept-policy": {
      "post": {
        "tags": ["List"],
        "summary": "Accept policy for a list",
        "operationId": "acceptListPolicy",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptListPolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/archive": {
      "post": {
        "tags": ["List"],
        "summary": "Archive a list",
        "operationId": "archiveList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArchiveListResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/unarchive": {
      "post": {
        "tags": ["List"],
        "summary": "Unarchive a list",
        "operationId": "unarchiveList",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnarchiveListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/exports": {
      "get": {
        "tags": ["Contact"],
        "summary": "Show all Contacts Exports",
        "description": "Show all Contacts Exports.",
        "operationId": "listContactsExports",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `status`\n  - `created_on`\n  - `expires_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `status`\n  - `created_on`\n  - `expires_on`"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `progress`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `progress`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsExportsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Contact"],
        "summary": "Create a Contacts Export",
        "description": "Create a Contacts Export to a CSV file.",
        "operationId": "exportContacts",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "description", "type": "string" },
            "name": "description",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "query", "type": "string" },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "fiql", "type": "string" },
            "name": "fiql",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "json",
              "type": "string",
              "format": "json-string"
            },
            "name": "json",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "segment_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "segment_id",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `status`\n  - `email`\n  - `tags`\n  - `interests`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactsExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/exports/{export_id}": {
      "get": {
        "tags": ["Contact"],
        "summary": "Show a Contacts Export",
        "description": "Show a Contacts Export.",
        "operationId": "getContactsExport",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "export_id", "type": "string" },
            "name": "export_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Contact"],
        "summary": "Delete a Contacts Export",
        "description": "Delete a Contacts Export.",
        "operationId": "deleteContactsExport",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "export_id", "type": "string" },
            "name": "export_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsExportDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/exports/{export_id}/download": {
      "get": {
        "tags": ["Contact"],
        "summary": "Download a Contacts Export",
        "description": "Download a Contacts Export.",
        "operationId": "downloadContactsExport",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "export_id", "type": "string" },
            "name": "export_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadContactsExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/lists/{list_id}": {
      "get": {
        "tags": ["Log"],
        "summary": "Show list logs",
        "operationId": "getListLogs",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `additional_info`\n  - `contact_id`\n  - `email`\n  - `uniques`\n  - `group_by_contact`\n  - `track_id`\n  - `log_id`\n  - `start_id`\n  - `end_id`\n  - `totals`\n  - `type`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `additional_info`\n  - `contact_id`\n  - `email`\n  - `uniques`\n  - `group_by_contact`\n  - `track_id`\n  - `log_id`\n  - `start_id`\n  - `end_id`\n  - `totals`\n  - `type`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListLogsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/campaigns/{campaign_id}": {
      "get": {
        "tags": ["Log"],
        "summary": "Show campaign logs",
        "operationId": "getCampaignLogs",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "cursor", "type": "string" },
            "name": "cursor",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `additional_info`\n  - `link_id`\n  - `contact_id`\n  - `email`\n  - `uniques`\n  - `group_by_contact`\n  - `log_id`\n  - `totals`\n  - `type`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `additional_info`\n  - `link_id`\n  - `contact_id`\n  - `email`\n  - `uniques`\n  - `group_by_contact`\n  - `log_id`\n  - `totals`\n  - `type`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `time`\n  - `log_id`",
            "required": false,
            "schema": {
              "title": "sort",
              "pattern": "[-|+]?.*",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `time`\n  - `log_id`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLogsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/emails": {
      "get": {
        "tags": ["Log"],
        "summary": "Show transactional email logs",
        "operationId": "getEmailLogs",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "log_type",
              "allOf": [{ "$ref": "#/components/schemas/LogType" }]
            },
            "name": "log_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `group_id`\n  - `email`\n  - `email_id`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `group_id`\n  - `email`\n  - `email_id`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmailLogsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/workflows/{workflow_id}/actions/{action_id}": {
      "get": {
        "tags": ["Log"],
        "summary": "Show action logs",
        "operationId": "getActionLogs",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `additional_info`\n  - `link_id`\n  - `contact_id`\n  - `email`\n  - `log_id`\n  - `track_id`\n  - `type`\n  - `group_by_contact`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `additional_info`\n  - `link_id`\n  - `contact_id`\n  - `email`\n  - `log_id`\n  - `track_id`\n  - `type`\n  - `group_by_contact`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `time`\n  - `log_id`",
            "required": false,
            "schema": {
              "title": "sort",
              "pattern": "[-|+]?.*",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `time`\n  - `log_id`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ActionLogsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/campaigns/{campaign_id}/exports": {
      "get": {
        "tags": ["Log"],
        "summary": "Show all campaign log exports",
        "description": "Show all campaign log exports",
        "operationId": "listCampaignLogExports",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "account_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLogExportsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Log"],
        "summary": "Create a campaign log export",
        "description": "Export to CSV a campaign log.",
        "operationId": "campaignLogExportCreate",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "description", "type": "string" },
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCampaignLogExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/logs/campaigns/{campaign_id}/exports/{campaign_log_export_id}/download": {
      "get": {
        "tags": ["Log"],
        "summary": "Download a campaign log export",
        "description": "Returns the URL to download the exported CSV file.",
        "operationId": "campaignLogExportDownload",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "campaign_log_export_id", "type": "string" },
            "name": "campaign_log_export_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "campaign_id", "type": "integer" },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadCampaignLogExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/logos/default": {
      "put": {
        "tags": ["Logo"],
        "summary": "Upload a default logo",
        "operationId": "uploadDefaultLogo",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UploadLogo" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UploadLogoResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Logo"],
        "summary": "Delete the default logo",
        "operationId": "deleteDefaultLogo",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteLogoResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/segments": {
      "get": {
        "tags": ["Segment"],
        "summary": "Show all segments",
        "operationId": "listSegments",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `name`\n  - `created_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `name`\n  - `created_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SegmentsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Segment"],
        "summary": "Create a segment",
        "operationId": "createSegment",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Segment" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSegmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/segments/{segment_id}": {
      "get": {
        "tags": ["Segment"],
        "summary": "Show a segment details",
        "operationId": "getSegment",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "segment_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "segment_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SegmentResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Segment"],
        "summary": "Delete a segment",
        "operationId": "deleteSegment",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "segment_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "segment_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSegmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Segment"],
        "summary": "Update a segment",
        "operationId": "patchSegment",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "segment_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "segment_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSegment" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/senders": {
      "get": {
        "tags": ["Sender"],
        "summary": "Show all senders",
        "operationId": "listSenders",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `email`\n  - `confirmed`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `email`\n  - `confirmed`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SendersResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Sender"],
        "summary": "Add a sender",
        "operationId": "createSender",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSender" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/senders/{sender_id}": {
      "get": {
        "tags": ["Sender"],
        "summary": "Show a sender details",
        "operationId": "getSender",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "sender_id", "type": "string" },
            "name": "sender_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SenderResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Sender"],
        "summary": "Delete a sender",
        "operationId": "deleteSender",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "sender_id", "type": "string" },
            "name": "sender_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Sender"],
        "summary": "Update a sender",
        "operationId": "patchSender",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "sender_id", "type": "string" },
            "name": "sender_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSender" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchSenderResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/brands/default/senders/confirm-email": {
      "post": {
        "tags": ["Sender"],
        "summary": "Confirm a sender",
        "operationId": "confirmSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConfirmSender" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/brands/default/senders/{sender_id}/resend-confirmation-email": {
      "post": {
        "tags": ["Sender"],
        "summary": "Resend confirmation email",
        "operationId": "resendConfirmationEmail",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "sender_id", "type": "string" },
            "name": "sender_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendConfirmationEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/interests": {
      "get": {
        "tags": ["Interest"],
        "summary": "Show all Interests",
        "operationId": "listInterests",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InterestsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Interest"],
        "summary": "Create an Interest",
        "operationId": "createInterest",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InterestCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/lists/{list_id}/interests/{interest_name}": {
      "get": {
        "tags": ["Interest"],
        "summary": "Get an Interest",
        "operationId": "getInterest",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "interest_name",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "interest_name",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InterestResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Interest"],
        "summary": "Delete an Interest",
        "operationId": "deleteInterest",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "interest_name",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "interest_name",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestDeletedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Interest"],
        "summary": "Update an Interest",
        "operationId": "patchInterest",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "interest_name",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "interest_name",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InterestPatch" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestPatchedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Task"],
        "summary": "Show all asynchronous Tasks",
        "description": "Show all asynchronous Task.",
        "operationId": "listTasks",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `status`\n  - `created_on`\n  - `expires_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `status`\n  - `created_on`\n  - `expires_on`"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `type`\n  - `status`\n  - `list_id`\n  - `progress`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `type`\n  - `status`\n  - `list_id`\n  - `progress`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListTasksResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": ["Task"],
        "summary": "Show an asynchronous Task",
        "description": "Show an asynchronous Task.",
        "operationId": "getTask",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "task_id", "type": "string" },
            "name": "task_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Task"],
        "summary": "Delete an asynchronous Task",
        "description": "Delete an asynchronous Task.",
        "operationId": "deleteTask",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "task_id", "type": "string" },
            "name": "task_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/templates": {
      "get": {
        "tags": ["Template"],
        "summary": "Show all templates",
        "operationId": "listTemplates",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `tag`\n  - `name`\n  - `is_owner`\n  - `is_not_owner`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `tag`\n  - `name`\n  - `is_owner`\n  - `is_not_owner`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `created_on`\n  - `updated_on`\n  - `name`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `id`\n  - `created_on`\n  - `updated_on`\n  - `name`",
              "default": "id"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TemplatesResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Template"],
        "summary": "Create a template",
        "operationId": "createTemplate",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Template" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TemplateCreated" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/templates/{template_id}": {
      "get": {
        "tags": ["Template"],
        "summary": "Get a template",
        "operationId": "getTemplate",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "template_id", "type": "integer" },
            "name": "template_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TemplateResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Template"],
        "summary": "Delete a template",
        "operationId": "deleteTemplate",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "template_id", "type": "integer" },
            "name": "template_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Template"],
        "summary": "Update a template",
        "operationId": "patchTemplate",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "template_id", "type": "integer" },
            "name": "template_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchTemplate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/templates/{template_id}/render": {
      "get": {
        "tags": ["Template"],
        "summary": "Render a template",
        "operationId": "renderTemplate",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "template_id", "type": "integer" },
            "name": "template_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/html": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/lists/{list_id}": {
      "get": {
        "tags": ["Report"],
        "summary": "Show list report",
        "operationId": "getListStats",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "list_id", "minimum": 1.0, "type": "integer" },
            "name": "list_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListStatsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/campaigns/{campaign_id}": {
      "get": {
        "tags": ["Report"],
        "summary": "Show campaign report",
        "operationId": "getCampaignStats",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/campaigns/{campaign_id}/links": {
      "get": {
        "tags": ["Report"],
        "summary": "Show campaign links report",
        "operationId": "getCampaignLinksStats",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "campaign_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "campaign_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "start_time", "type": "integer" },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "end_time", "type": "integer" },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `unique`\n  - `total`\n  - `link`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `unique`\n  - `total`\n  - `link`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLinksStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/emails": {
      "get": {
        "tags": ["Report"],
        "summary": "Show transactional email report",
        "operationId": "getEmailsStats",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmailStatsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/accounts/self": {
      "get": {
        "tags": ["Report"],
        "summary": "Show my account report",
        "operationId": "getSelfAccountStats",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/accounts/{account_id}": {
      "get": {
        "tags": ["Report"],
        "summary": "Show account report",
        "operationId": "getAccountStats",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "account_id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "account_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "start_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "end_time",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "end_time",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/reports/workflows/{workflow_id}/actions/{action_id}": {
      "get": {
        "tags": ["Report"],
        "summary": "Show action report",
        "operationId": "getActionStats",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ActionStatsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/suppressed-emails": {
      "get": {
        "tags": ["Suppressed Email"],
        "summary": "Show all suppressed emails",
        "operationId": "listSuppressedEmails",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `email`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `email`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuppressedEmailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Suppressed Email"],
        "summary": "Add a suppressed email",
        "operationId": "createSuppressedEmail",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SuppressedEmail" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSuppressedEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/suppressed-emails/{email}": {
      "delete": {
        "tags": ["Suppressed Email"],
        "summary": "Delete a suppressed email",
        "operationId": "deleteSuppressedEmail",
        "parameters": [
          {
            "description": "Full email, a local part wildcard or a domain wildcard. Examples: *@domain.com, john@*, john@domain.com",
            "required": true,
            "schema": {
              "title": "email",
              "pattern": "(^\\*@[^@*]+\\.[^@*]+$|^[^@*]+@\\*$|^[^@*]+@[^@*]+\\.[^@*]+$)",
              "type": "string",
              "description": "Full email, a local part wildcard or a domain wildcard. Examples: *@domain.com, john@*, john@domain.com"
            },
            "name": "email",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSuppressedEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/token": {
      "put": {
        "tags": ["Token"],
        "summary": "Refresh a token",
        "operationId": "refreshToken",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "version", "type": "string", "default": "v1" },
            "name": "version",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_token_token_put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPUnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPForbiddenError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Token"],
        "summary": "Create a token",
        "operationId": "createToken",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "version", "type": "string", "default": "v1" },
            "name": "version",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_token_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPUnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPForbiddenError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/self": {
      "get": {
        "tags": ["User"],
        "summary": "Show my user details",
        "operationId": "getSelfUser",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/forgot-my-password": {
      "post": {
        "tags": ["User"],
        "summary": "Forgot my password",
        "description": "Sends an email containing a reset password token.",
        "operationId": "forgotMyPassword",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [{ "$ref": "#/components/schemas/Languages" }],
              "default": "en_US",
              "title": "language"
            },
            "name": "language",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgotMyPassword" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/self/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "Reset my password",
        "description": "Sends an email containing a reset password token.",
        "operationId": "resetSelfPassword",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/{user_id}/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "Reset a user password",
        "description": "Sends an email containing a reset password token.",
        "operationId": "resetUserPassword",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "user_id", "type": "integer" },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetUserPassword" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/reset-password-confirm": {
      "post": {
        "tags": ["User"],
        "summary": "Reset password confirmation",
        "description": "Change a user password if the reset password token is valid for that user.",
        "operationId": "resetPasswordConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordConfirm" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordConfirmResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Show all users in my account",
        "operationId": "listUsers",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `email`\n  - `status`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `email`\n  - `status`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UsersResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "operationId": "createUser",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "skip_verification",
              "type": "boolean",
              "default": false
            },
            "name": "skip_verification",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [
          { "OAuth2PasswordBearer": [] },
          { "OAuth2PasswordBearer": [] }
        ]
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["User"],
        "summary": "Show a user details",
        "operationId": "getUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "user_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "user_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update a user",
        "operationId": "patchUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "user_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchUser" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [
          { "OAuth2PasswordBearer": [] },
          { "OAuth2PasswordBearer": [] }
        ]
      }
    },
    "/users/{user_id}/suspend": {
      "post": {
        "tags": ["User"],
        "summary": "Suspend a user",
        "operationId": "suspendUser",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "user_id", "type": "integer" },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuspendUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/{user_id}/unsuspend": {
      "post": {
        "tags": ["User"],
        "summary": "Unsuspend a user",
        "operationId": "unsuspendUser",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "user_id", "type": "integer" },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuspendUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/users/{user_id}/confirm": {
      "post": {
        "tags": ["User"],
        "summary": "Confirm a user",
        "operationId": "confirmUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "user_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserConfirmation" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConfirmUserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/resend-verification-email": {
      "post": {
        "tags": ["User"],
        "summary": "Resend the user verification email",
        "operationId": "resendUserVerification",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "user_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendUserVerificationEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/accounts": {
      "get": {
        "tags": ["Sub-Account"],
        "summary": "Show all sub-accounts",
        "operationId": "listAccounts",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "partner_account_id", "type": "integer" },
            "name": "partner_account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "recursive",
              "type": "boolean",
              "default": false
            },
            "name": "recursive",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "description": "Valid Terms:\n  - `name`\n  - `status`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`",
            "required": false,
            "schema": {
              "title": "filter",
              "type": "string",
              "description": "Valid Terms:\n  - `name`\n  - `status`\n\nValid Operators:\n  - `==`\n\nQuery separator:\n  - `;`"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Sub-Account"],
        "summary": "Create a sub-account",
        "operationId": "createAccount",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "partner_account_id", "type": "integer" },
            "name": "partner_account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "skip_verification",
              "type": "boolean",
              "default": false
            },
            "name": "skip_verification",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAccount" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": ["Sub-Account"],
        "summary": "Show sub-account details",
        "operationId": "getAccount",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "account_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Sub-Account"],
        "summary": "Delete a sub-account",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "account_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Sub-Account"],
        "summary": "Update a sub-account",
        "operationId": "patchAccount",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchAccount" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/accounts/{account_id}/suspend": {
      "post": {
        "tags": ["Sub-Account"],
        "summary": "Suspend a sub-account",
        "operationId": "suspendAccount",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuspendAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/accounts/{account_id}/unsuspend": {
      "post": {
        "tags": ["Sub-Account"],
        "summary": "Unsuspend a sub-account",
        "operationId": "unsuspendAccount",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsuspendAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/accounts/{account_id}/confirm": {
      "post": {
        "tags": ["Sub-Account"],
        "summary": "Confirm sub-account creation",
        "operationId": "confirmAccount",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "account_id",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+$",
              "type": "string"
            },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConfirmAccount" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/accounts/resend-verification-email": {
      "post": {
        "tags": ["Sub-Account"],
        "summary": "Resend the account verification email",
        "operationId": "resendAccountVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendAccountVerificationEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "tags": ["Workflow"],
        "summary": "Show all workflows",
        "operationId": "listWorkflows",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `description`\n  - `goal`\n  - `status`\n  - `created_on`\n  - `updated_on`\n  - `activated_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `description`\n  - `goal`\n  - `status`\n  - `created_on`\n  - `updated_on`\n  - `activated_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorkflowsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Workflow"],
        "summary": "Create a workflow",
        "operationId": "createWorkflow",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Workflow" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}": {
      "get": {
        "tags": ["Workflow"],
        "summary": "Show a workflow",
        "operationId": "getWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetWorkflowResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Workflow"],
        "summary": "Delete a workflow",
        "operationId": "deleteWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Workflow"],
        "summary": "Update a workflow",
        "operationId": "patchWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchWorkflow" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/activate": {
      "post": {
        "tags": ["Workflow"],
        "summary": "Activate a workflow",
        "operationId": "activateWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "sender_email", "type": "string" },
            "name": "sender_email",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/deactivate": {
      "post": {
        "tags": ["Workflow"],
        "summary": "Deactivate a workflow",
        "operationId": "deactivateWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "description": "Locking key, preventing other users from modifying this workflow for a short period.",
            "required": false,
            "schema": {
              "title": "lock_key",
              "pattern": "^[a-zA-Z0-9-_]{8,}$",
              "type": "string",
              "description": "Locking key, preventing other users from modifying this workflow for a short period."
            },
            "name": "lock_key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeactivateWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/lock": {
      "post": {
        "tags": ["Workflow"],
        "summary": "Lock a workflow",
        "operationId": "lockWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LockWorkflow" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflows/{workflow_id}/unlock": {
      "post": {
        "tags": ["Workflow"],
        "summary": "Unlock a workflow",
        "operationId": "unlockWorkflow",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "workflow_id", "type": "string" },
            "name": "workflow_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UnlockWorkflow" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockWorkflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/workflow-blueprints": {
      "get": {
        "tags": ["Workflow Blueprint"],
        "summary": "Show all workflow blueprints",
        "operationId": "listWorkflowBlueprints",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `description`\n  - `goal`\n  - `created_on`\n  - `updated_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `description`\n  - `goal`\n  - `created_on`\n  - `updated_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflow-blueprints/{blueprint_id}/actions": {
      "get": {
        "tags": ["Workflow Blueprint"],
        "summary": "Show workflow blueprint actions",
        "operationId": "listWorkflowBlueprintActions",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "blueprint_id", "type": "string" },
            "name": "blueprint_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "page", "type": "integer", "default": 1 },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "per_page", "type": "integer", "default": 50 },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          },
          {
            "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`",
            "required": false,
            "schema": {
              "title": "sort",
              "type": "string",
              "description": "Sort term and direction, using syntax `[-|+]term`.\n\nValid terms:\n  - `name`\n  - `created_on`"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ActionsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflow-blueprints/{blueprint_id}/actions/{action_id}": {
      "get": {
        "tags": ["Workflow Blueprint"],
        "summary": "Show a workflow blueprint action",
        "operationId": "getWorkflowBlueprintAction",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "blueprint_id", "type": "string" },
            "name": "blueprint_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "action_id", "type": "string" },
            "name": "action_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflow-blueprints/{blueprint_id}": {
      "get": {
        "tags": ["Workflow Blueprint"],
        "summary": "Show a workflow blueprint",
        "operationId": "getWorkflowBlueprint",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "blueprint_id", "type": "string" },
            "name": "blueprint_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/brands/default/system-emails": {
      "get": {
        "tags": ["System Email"],
        "summary": "Show system emails configuration",
        "description": "Show system emails configuration",
        "operationId": "showSystemEmails",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemEmailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["System Email"],
        "summary": "Set system emails configuration",
        "description": "Set system emails configuration",
        "operationId": "setSystemEmails",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SystemEmailsTemplates" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutSystemEmailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["System Email"],
        "summary": "Update system emails configuration",
        "description": "Partially update system emails configuration",
        "operationId": "patchSystemEmails",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SystemEmailsTemplates" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutSystemEmailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/webhooks": {
      "get": {
        "tags": ["Webhook"],
        "summary": "List all webhooks",
        "operationId": "listWebhooks",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_archived",
              "type": "boolean",
              "default": false
            },
            "name": "with_archived",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWebhooksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Webhook"],
        "summary": "Create a webhook",
        "operationId": "createWebhook",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateWebhook" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/webhooks/{webhook_id}/archive": {
      "post": {
        "tags": ["Webhook"],
        "summary": "Archive a webhook",
        "operationId": "archiveWebhook",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "webhook_id", "type": "string" },
            "name": "webhook_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/webhooks/{webhook_id}/unarchive": {
      "post": {
        "tags": ["Webhook"],
        "summary": "Unarchive a webhook",
        "operationId": "unarchiveWebhook",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "webhook_id", "type": "string" },
            "name": "webhook_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnArchiveWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Show a webhook",
        "operationId": "getWebhook",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "webhook_id", "type": "string" },
            "name": "webhook_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Webhook"],
        "summary": "Patch a webhook",
        "operationId": "patchWebhook",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "webhook_id", "type": "string" },
            "name": "webhook_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchWebhook" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/tags/{tag}": {
      "get": {
        "tags": ["Tags"],
        "summary": "Show a tag",
        "operationId": "showTag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "tag",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            },
            "name": "tag",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Tags"],
        "summary": "Delete a tag",
        "operationId": "deleteTag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "tag",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            },
            "name": "tag",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteTagResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Tags"],
        "summary": "Edit tag",
        "operationId": "patchTag",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "tag",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            },
            "name": "tag",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PatchTag" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PatchTagResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/tags": {
      "get": {
        "tags": ["Tags"],
        "summary": "Show all tags",
        "operationId": "listTags",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "per_page",
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "with_count",
              "type": "boolean",
              "default": false
            },
            "name": "with_count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagsResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["Tags"],
        "summary": "Create a tag",
        "operationId": "createTag",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "account_id", "type": "integer" },
            "name": "account_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTag" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateTagResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPBadRequestError" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptListPolicyResponse": {
        "title": "AcceptListPolicyResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": { "title": "object", "type": "string", "default": "list" },
          "policy_accepted": {
            "title": "policy_accepted",
            "type": "boolean",
            "default": true
          }
        }
      },
      "AccountFullResponse": {
        "title": "AccountFullResponse",
        "required": [
          "id",
          "lineage",
          "status",
          "address",
          "account_owner",
          "logo",
          "usage_limits",
          "last_activity_on",
          "created_on",
          "partner",
          "overrides"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "lineage": { "title": "lineage", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/AccountStatus",
            "title": "status"
          },
          "name": { "title": "name", "type": "string" },
          "address": {
            "$ref": "#/components/schemas/AddressResponse",
            "title": "address"
          },
          "account_owner": {
            "$ref": "#/components/schemas/AccountOwnerResponse",
            "title": "account_owner"
          },
          "fax": { "title": "fax", "type": "string" },
          "phone": { "title": "phone", "type": "string" },
          "website": { "title": "website", "type": "string" },
          "logo": { "title": "logo", "type": "string" },
          "usage_limits": {
            "$ref": "#/components/schemas/UsageLimitsResponse",
            "title": "usage_limits"
          },
          "last_activity_on": {
            "title": "last_activity_on",
            "type": "integer"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "partner": { "title": "partner", "type": "boolean" },
          "overrides": {
            "$ref": "#/components/schemas/AccountOverrides",
            "title": "overrides"
          }
        }
      },
      "AccountOverrides": {
        "title": "AccountOverrides",
        "required": [
          "bypass_recaptcha",
          "inject_address",
          "inject_unsubscribe_link"
        ],
        "type": "object",
        "properties": {
          "bypass_recaptcha": {
            "title": "bypass_recaptcha",
            "type": "boolean"
          },
          "inject_address": { "title": "inject_address", "type": "boolean" },
          "inject_unsubscribe_link": {
            "title": "inject_unsubscribe_link",
            "type": "boolean"
          }
        }
      },
      "AccountOwner": {
        "title": "AccountOwner",
        "required": ["user_id"],
        "type": "object",
        "properties": {
          "user_id": { "title": "user_id", "minimum": 1.0, "type": "integer" }
        }
      },
      "AccountOwnerResponse": {
        "title": "AccountOwnerResponse",
        "type": "object",
        "properties": { "user_id": { "title": "user_id", "type": "string" } }
      },
      "AccountOwnerUser": {
        "title": "AccountOwnerUser",
        "required": ["first_name", "last_name", "email"],
        "type": "object",
        "properties": {
          "first_name": { "title": "first_name", "type": "string" },
          "last_name": { "title": "last_name", "type": "string" },
          "title": { "title": "title", "type": "string" },
          "office_phone": { "title": "office_phone", "type": "string" },
          "mobile_phone": {
            "title": "mobile_phone",
            "pattern": "[0-9]+",
            "type": "string"
          },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "Based on tz database"
          },
          "password": { "title": "password", "minLength": 8, "type": "string" },
          "email": { "title": "email", "type": "string", "format": "email" }
        }
      },
      "AccountResponse": {
        "title": "AccountResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountFullResponse",
            "title": "data"
          }
        }
      },
      "AccountStatResponse": {
        "title": "AccountStatResponse",
        "required": [
          "active_contacts",
          "sent_emails",
          "sent_campaign_emails",
          "sent_action_emails",
          "sent_email_emails",
          "open_rate",
          "bounce_rate",
          "click_rate",
          "spam_rate",
          "unsubscribe_rate",
          "emails_usage",
          "contacts_usage",
          "bounces_hard",
          "bounce_hard_rate",
          "spams",
          "current_lists"
        ],
        "type": "object",
        "properties": {
          "active_contacts": { "title": "active_contacts", "type": "integer" },
          "sent_emails": { "title": "sent_emails", "type": "integer" },
          "sent_campaign_emails": {
            "title": "sent_campaign_emails",
            "type": "integer"
          },
          "sent_action_emails": {
            "title": "sent_action_emails",
            "type": "integer"
          },
          "sent_email_emails": {
            "title": "sent_email_emails",
            "type": "integer"
          },
          "open_rate": { "title": "open_rate", "type": "number" },
          "bounce_rate": { "title": "bounce_rate", "type": "number" },
          "click_rate": { "title": "click_rate", "type": "number" },
          "spam_rate": { "title": "spam_rate", "type": "number" },
          "unsubscribe_rate": { "title": "unsubscribe_rate", "type": "number" },
          "emails_usage": { "title": "emails_usage", "type": "number" },
          "contacts_usage": { "title": "contacts_usage", "type": "number" },
          "bounces_hard": { "title": "bounces_hard", "type": "integer" },
          "bounce_hard_rate": { "title": "bounce_hard_rate", "type": "number" },
          "spams": { "title": "spams", "type": "integer" },
          "current_lists": { "title": "current_lists", "type": "integer" }
        }
      },
      "AccountStatsResponse": {
        "title": "AccountStatsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountStatResponse",
            "title": "data"
          }
        }
      },
      "AccountStatus": {
        "title": "AccountStatus",
        "enum": [
          "trial",
          "active",
          "suspended",
          "suspended_by_partner",
          "deleted",
          "incomplete",
          "pending"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AccountSummaryResponse": {
        "title": "AccountSummaryResponse",
        "required": [
          "id",
          "lineage",
          "status",
          "partner",
          "account_owner",
          "usage_limits",
          "created_on"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "lineage": { "title": "lineage", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/AccountStatus",
            "title": "status"
          },
          "partner": { "title": "partner", "type": "boolean" },
          "name": { "title": "name", "type": "string" },
          "account_owner": {
            "$ref": "#/components/schemas/AccountOwnerResponse",
            "title": "account_owner"
          },
          "usage_limits": {
            "$ref": "#/components/schemas/UsageLimitsResponse",
            "title": "usage_limits"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "expires_on": { "title": "expires_on", "type": "integer" }
        }
      },
      "AccountsResponse": {
        "title": "AccountsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccountSummaryResponse" }
          }
        }
      },
      "Action": {
        "title": "Action",
        "required": ["name", "condition", "delay", "type"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "parent_id": { "title": "parent_id", "type": "string" },
          "condition": {
            "$ref": "#/components/schemas/ActionCondition",
            "title": "condition"
          },
          "delay": { "title": "delay", "type": "integer" },
          "type": {
            "$ref": "#/components/schemas/ActionType",
            "title": "type"
          },
          "email_settings": {
            "$ref": "#/components/schemas/ActionEmailSettings",
            "title": "email_settings"
          }
        }
      },
      "ActionBlueprint": {
        "title": "ActionBlueprint",
        "required": ["id", "name", "condition", "delay", "type"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "parent_id": { "title": "parent_id", "type": "string" },
          "condition": {
            "$ref": "#/components/schemas/ActionCondition",
            "title": "condition"
          },
          "delay": { "title": "delay", "type": "integer" },
          "type": {
            "$ref": "#/components/schemas/ActionType",
            "title": "type"
          },
          "email_settings": {
            "$ref": "#/components/schemas/ActionEmailBlueprintSettings",
            "title": "email_settings"
          }
        }
      },
      "ActionCondition": {
        "title": "condition",
        "enum": ["opened", "not_opened", "clicked", "not_clicked", "none"],
        "type": "string",
        "description": "An enumeration."
      },
      "ActionContent": {
        "title": "ActionContent",
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "minLength": 1, "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/ContentType" }],
            "default": "html"
          },
          "encoding": {
            "title": "encoding",
            "allOf": [{ "$ref": "#/components/schemas/Encoding" }]
          },
          "template": {
            "title": "template",
            "allOf": [{ "$ref": "#/components/schemas/TemplateId" }]
          }
        }
      },
      "ActionDefaultEmailSettings": {
        "title": "ActionDefaultEmailSettings",
        "required": ["sender"],
        "type": "object",
        "properties": {
          "sender": { "$ref": "#/components/schemas/Sender", "title": "sender" }
        }
      },
      "ActionEmailBlueprintSettings": {
        "title": "ActionEmailBlueprintSettings",
        "required": ["content"],
        "type": "object",
        "properties": {
          "tracking": {
            "title": "tracking",
            "allOf": [{ "$ref": "#/components/schemas/ActionTracking" }],
            "default": {
              "opens": true,
              "clicks_html": true,
              "clicks_text": true
            }
          },
          "content": {
            "$ref": "#/components/schemas/ActionContent",
            "title": "content"
          }
        }
      },
      "ActionEmailSettings": {
        "title": "ActionEmailSettings",
        "required": ["content", "sender"],
        "type": "object",
        "properties": {
          "tracking": {
            "title": "tracking",
            "allOf": [{ "$ref": "#/components/schemas/ActionTracking" }],
            "default": {
              "opens": true,
              "clicks_html": true,
              "clicks_text": true
            }
          },
          "content": {
            "$ref": "#/components/schemas/ActionContent",
            "title": "content"
          },
          "sender": { "$ref": "#/components/schemas/Sender", "title": "sender" }
        }
      },
      "ActionLogResponse": {
        "title": "ActionLogResponse",
        "required": ["contact_id", "occurrences"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "contact_id": { "title": "contact_id", "type": "integer" },
          "email": { "title": "email", "type": "string" },
          "type": {
            "$ref": "#/components/schemas/EventTypeResponse",
            "title": "type"
          },
          "timestamp": { "title": "timestamp", "type": "integer" },
          "occurrences": { "title": "occurrences", "type": "integer" },
          "user_agent": {
            "$ref": "#/components/schemas/UserInfo",
            "title": "user_agent"
          }
        }
      },
      "ActionLogsResponse": {
        "title": "ActionLogsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActionLogResponse" }
          }
        }
      },
      "ActionResponse": {
        "title": "ActionResponse",
        "required": [
          "id",
          "name",
          "condition",
          "delay",
          "type",
          "thumbnail_url"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "parent_id": { "title": "parent_id", "type": "string" },
          "condition": {
            "$ref": "#/components/schemas/ActionCondition",
            "title": "condition"
          },
          "delay": { "title": "delay", "type": "integer" },
          "type": {
            "$ref": "#/components/schemas/ActionType",
            "title": "type"
          },
          "email_settings": {
            "$ref": "#/components/schemas/ActionEmailSettings",
            "title": "email_settings"
          },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" }
        }
      },
      "ActionStatResponse": {
        "title": "ActionStatResponse",
        "required": [
          "bounces",
          "bounces_address_changed",
          "bounces_challenge_response",
          "bounces_dns_failure",
          "bounces_full_mailbox",
          "bounces_hard",
          "bounces_mail_blocked",
          "bounces_soft",
          "bounces_transient",
          "unique_clicks",
          "forwards",
          "implied_opens",
          "unique_opens",
          "unopens",
          "clicks",
          "opens",
          "spams",
          "spam_rate",
          "unsubscribes",
          "sent_emails"
        ],
        "type": "object",
        "properties": {
          "bounces": { "title": "bounces", "type": "integer" },
          "bounces_address_changed": {
            "title": "bounces_address_changed",
            "type": "integer"
          },
          "bounces_challenge_response": {
            "title": "bounces_challenge_response",
            "type": "integer"
          },
          "bounces_dns_failure": {
            "title": "bounces_dns_failure",
            "type": "integer"
          },
          "bounces_full_mailbox": {
            "title": "bounces_full_mailbox",
            "type": "integer"
          },
          "bounces_hard": { "title": "bounces_hard", "type": "integer" },
          "bounces_mail_blocked": {
            "title": "bounces_mail_blocked",
            "type": "integer"
          },
          "bounces_soft": { "title": "bounces_soft", "type": "integer" },
          "bounces_transient": {
            "title": "bounces_transient",
            "type": "integer"
          },
          "unique_clicks": { "title": "unique_clicks", "type": "integer" },
          "forwards": { "title": "forwards", "type": "integer" },
          "implied_opens": { "title": "implied_opens", "type": "integer" },
          "unique_opens": { "title": "unique_opens", "type": "integer" },
          "unopens": { "title": "unopens", "type": "integer" },
          "clicks": { "title": "clicks", "type": "integer" },
          "opens": { "title": "opens", "type": "integer" },
          "spams": { "title": "spams", "type": "integer" },
          "spam_rate": { "title": "spam_rate", "type": "number" },
          "unsubscribes": { "title": "unsubscribes", "type": "integer" },
          "sent_emails": { "title": "sent_emails", "type": "integer" }
        }
      },
      "ActionStatsResponse": {
        "title": "ActionStatsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActionStatResponse",
            "title": "data"
          }
        }
      },
      "ActionSummaryResponse": {
        "title": "ActionSummaryResponse",
        "required": [
          "id",
          "name",
          "condition",
          "delay",
          "type",
          "thumbnail_url"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "name": { "title": "name", "type": "string" },
          "parent_id": { "title": "parent_id", "type": "string" },
          "condition": {
            "$ref": "#/components/schemas/ActionCondition",
            "title": "condition"
          },
          "delay": { "title": "delay", "type": "integer" },
          "type": {
            "$ref": "#/components/schemas/ActionType",
            "title": "type"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" }
        }
      },
      "ActionTracking": {
        "title": "ActionTracking",
        "type": "object",
        "properties": {
          "opens": { "title": "opens", "type": "boolean", "default": true },
          "clicks_html": {
            "title": "clicks_html",
            "type": "boolean",
            "default": true
          },
          "clicks_text": {
            "title": "clicks_text",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ActionType": {
        "title": "type",
        "enum": ["email"],
        "type": "string",
        "description": "An enumeration."
      },
      "ActionsResponse": {
        "title": "ActionsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActionSummaryResponse" }
          }
        }
      },
      "ActivateWorkflowResponse": {
        "title": "ActivateWorkflowResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "activated": {
            "title": "activated",
            "type": "boolean",
            "default": true
          }
        }
      },
      "AddInterestsToContacts": {
        "title": "AddInterestsToContacts",
        "required": ["interests"],
        "type": "object",
        "properties": {
          "interests": {
            "title": "interests",
            "maxItems": 16,
            "type": "array",
            "items": {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          "contact_ids": {
            "title": "contact_ids",
            "minimum": 1.0,
            "maxItems": 1024,
            "type": "array",
            "items": { "minimum": 1.0, "type": "integer" }
          },
          "query": { "title": "query", "type": "string" },
          "fiql": { "title": "fiql", "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "AddInterestsToMultipleContactsResponse": {
        "title": "AddInterestsToMultipleContactsResponse",
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "interests"
          },
          "added": { "title": "added", "type": "boolean", "default": true }
        }
      },
      "AdditionalEmailHeader": {
        "title": "AdditionalEmailHeader",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "value": { "title": "value", "type": "string" }
        }
      },
      "Address": {
        "title": "Address",
        "required": ["address1", "city", "country", "province", "postal_code"],
        "type": "object",
        "properties": {
          "address1": { "title": "address1", "minLength": 1, "type": "string" },
          "address2": { "title": "address2", "type": "string" },
          "city": { "title": "city", "minLength": 1, "type": "string" },
          "country": { "title": "country", "minLength": 1, "type": "string" },
          "province": { "title": "province", "minLength": 1, "type": "string" },
          "postal_code": {
            "title": "postal_code",
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "AddressResponse": {
        "title": "AddressResponse",
        "type": "object",
        "properties": {
          "address1": { "title": "address1", "type": "string" },
          "address2": { "title": "address2", "type": "string" },
          "city": { "title": "city", "type": "string" },
          "country": { "title": "country", "type": "string" },
          "province": { "title": "province", "type": "string" },
          "postal_code": { "title": "postal_code", "type": "string" }
        }
      },
      "ArchiveCampaignResponse": {
        "title": "ArchiveCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "archived": {
            "title": "archived",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ArchiveListResponse": {
        "title": "ArchiveListResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": { "title": "object", "type": "string", "default": "list" },
          "archived": {
            "title": "archived",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ArchiveWebhookResponse": {
        "title": "ArchiveWebhookResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "data": {
            "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook",
            "title": "data"
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "Webhook"
          },
          "archived": {
            "title": "archived",
            "type": "boolean",
            "default": true
          }
        }
      },
      "Attachment": {
        "title": "Attachment",
        "required": ["filename", "type", "content"],
        "type": "object",
        "properties": {
          "filename": {
            "title": "filename",
            "pattern": "^[a-zA-Z0-9-_]+\\.(ics|pdf)$",
            "type": "string",
            "description": "File name"
          },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/AttachmentType" }],
            "description": "Content Type"
          },
          "content": {
            "title": "content",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "description": "Base64-encoded attachment content"
          }
        }
      },
      "AttachmentType": {
        "title": "type",
        "enum": ["calendar", "pdf"],
        "type": "string",
        "description": "Content Type"
      },
      "Audience": {
        "title": "Audience",
        "type": "object",
        "properties": {
          "list_id": { "title": "list_id", "minimum": 1.0, "type": "integer" },
          "segment_id": {
            "title": "segment_id",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "AudienceResponse": {
        "title": "AudienceResponse",
        "type": "object",
        "properties": {
          "list_id": { "title": "list_id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "segment_id": { "title": "segment_id", "type": "integer" }
        }
      },
      "AudienceSummaryResponse": {
        "title": "AudienceSummaryResponse",
        "type": "object",
        "properties": {
          "list_id": { "title": "list_id", "type": "integer" },
          "segment_id": { "title": "segment_id", "type": "integer" }
        }
      },
      "BadRequestMessage": {
        "title": "BadRequestMessage",
        "required": ["msg"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "loc",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "msg", "type": "string" },
          "type": {
            "title": "type",
            "type": "string",
            "default": "bad_request"
          }
        }
      },
      "Body_create_token_token_post": {
        "title": "Body_create_token_token_post",
        "required": ["username"],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "grant_type",
            "allOf": [{ "$ref": "#/components/schemas/PasswordGrantType" }],
            "default": "password"
          },
          "username": {
            "title": "username",
            "type": "string",
            "format": "email"
          },
          "password": { "title": "password", "type": "string" },
          "account_id": { "title": "account_id", "type": "integer" },
          "scopes": { "title": "scopes", "type": "string", "default": "user" },
          "expiration_seconds": {
            "title": "expiration_seconds",
            "minimum": 600.0,
            "type": "integer"
          }
        }
      },
      "Body_refresh_token_token_put": {
        "title": "Body_refresh_token_token_put",
        "required": ["refresh_token"],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "grant_type",
            "allOf": [{ "$ref": "#/components/schemas/RefreshGrantType" }],
            "default": "refresh_token"
          },
          "refresh_token": { "title": "refresh_token", "type": "string" }
        }
      },
      "BrowserInfo": {
        "title": "BrowserInfo",
        "type": "object",
        "properties": {
          "family": { "title": "family", "type": "string" },
          "version": { "title": "version", "type": "string" }
        }
      },
      "CampaignBlueprintId": {
        "title": "CampaignBlueprintId",
        "required": ["id"],
        "type": "object",
        "properties": { "id": { "title": "id", "type": "integer" } }
      },
      "CampaignBlueprintResponse": {
        "title": "CampaignBlueprintResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateFullResponse",
            "title": "data"
          }
        }
      },
      "CampaignBlueprintSummaryResponse": {
        "title": "CampaignBlueprintSummaryResponse",
        "required": ["id", "name", "created_on", "updated_on"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" }
          },
          "thumbnail": {
            "title": "thumbnail",
            "type": "string",
            "deprecated": true
          },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" }
        }
      },
      "CampaignBlueprintsResponse": {
        "title": "CampaignBlueprintsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignBlueprintSummaryResponse"
            }
          }
        }
      },
      "CampaignContent": {
        "title": "CampaignContent",
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "minLength": 1, "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/ContentType" }],
            "default": "html"
          },
          "encoding": {
            "title": "encoding",
            "allOf": [{ "$ref": "#/components/schemas/Encoding" }]
          },
          "template": {
            "title": "template",
            "allOf": [{ "$ref": "#/components/schemas/TemplateId" }]
          },
          "blueprint": {
            "$ref": "#/components/schemas/CampaignBlueprintId",
            "title": "blueprint"
          },
          "default_unsubscribe_link": {
            "title": "default_unsubscribe_link",
            "type": "boolean"
          }
        }
      },
      "CampaignContentResponse": {
        "title": "CampaignContentResponse",
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "type": "string" },
          "html": { "title": "html", "type": "string" },
          "text": { "title": "text", "type": "string" },
          "json": { "title": "json", "type": "object" },
          "type": {
            "$ref": "#/components/schemas/ContentTypeResponse",
            "title": "type"
          },
          "hash": { "title": "hash", "type": "string" },
          "last_updated_on": { "title": "last_updated_on", "type": "integer" },
          "encoding": {
            "$ref": "#/components/schemas/EncodingResponse",
            "title": "encoding"
          },
          "default_unsubscribe_link": {
            "title": "default_unsubscribe_link",
            "type": "boolean"
          },
          "social_bar": { "title": "social_bar", "type": "boolean" },
          "footer": { "title": "footer", "type": "string" }
        }
      },
      "CampaignFullResponse": {
        "title": "CampaignFullResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "audience": {
            "$ref": "#/components/schemas/AudienceResponse",
            "title": "audience"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignType",
            "title": "type"
          },
          "tracking": {
            "$ref": "#/components/schemas/TrackingResponse",
            "title": "tracking"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "scheduled_for": { "title": "scheduled_for", "type": "integer" },
          "scheduled_on": { "title": "scheduled_on", "type": "integer" },
          "delivery_finished_on": {
            "title": "delivery_finished_on",
            "type": "integer"
          },
          "sender": {
            "$ref": "#/components/schemas/ListSenderResponse",
            "title": "sender"
          },
          "reply_to_email": { "title": "reply_to_email", "type": "string" },
          "content": {
            "$ref": "#/components/schemas/CampaignContentResponse",
            "title": "content"
          },
          "next_building_step": {
            "title": "next_building_step",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CampaignStatus",
            "title": "status"
          },
          "suspended": { "title": "suspended", "type": "boolean" },
          "web_email_link": { "title": "web_email_link", "type": "string" },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" },
          "updated_on": { "title": "updated_on", "type": "integer" }
        }
      },
      "CampaignLinkStatsResponse": {
        "title": "CampaignLinkStatsResponse",
        "required": [
          "id",
          "link",
          "unique",
          "total",
          "unique_rate",
          "total_rate"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "link": { "title": "link", "type": "string" },
          "unique": { "title": "unique", "type": "integer" },
          "total": { "title": "total", "type": "integer" },
          "unique_rate": { "title": "unique_rate", "type": "number" },
          "total_rate": { "title": "total_rate", "type": "number" }
        }
      },
      "CampaignLinksStatsResponse": {
        "title": "CampaignLinksStatsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignLinkStatsResponse"
            }
          }
        }
      },
      "CampaignLogExportFullResponse": {
        "title": "CampaignLogExportFullResponse",
        "required": [
          "id",
          "campaign_id",
          "status",
          "requested_by",
          "created_on",
          "expires_on",
          "progress"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "campaign_id": { "title": "campaign_id", "type": "integer" },
          "status": {
            "$ref": "#/components/schemas/CampaignLogExportStatus",
            "title": "status"
          },
          "description": { "title": "description", "type": "string" },
          "requested_by": {
            "$ref": "#/components/schemas/CampaignLogExportRequestedBy",
            "title": "requested_by"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "expires_on": { "title": "expires_on", "type": "integer" },
          "progress": { "title": "progress", "type": "number" }
        }
      },
      "CampaignLogExportRequestedBy": {
        "title": "CampaignLogExportRequestedBy",
        "required": ["id", "email"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "email": { "title": "email", "type": "string" }
        }
      },
      "CampaignLogExportStatus": {
        "title": "CampaignLogExportStatus",
        "enum": ["pending", "ready", "deleted", "failed"],
        "type": "string",
        "description": "An enumeration."
      },
      "CampaignLogExportsResponse": {
        "title": "CampaignLogExportsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignLogExportFullResponse"
            }
          }
        }
      },
      "CampaignLogResponse": {
        "title": "CampaignLogResponse",
        "required": ["id", "contact_id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "contact_id": { "title": "contact_id", "type": "integer" },
          "email": { "title": "email", "type": "string" },
          "type": {
            "$ref": "#/components/schemas/EventTypeResponse",
            "title": "type"
          },
          "timestamp": { "title": "timestamp", "type": "integer" },
          "occurrences": { "title": "occurrences", "type": "integer" },
          "clickthru_url": { "title": "clickthru_url", "type": "string" },
          "user_agent": {
            "$ref": "#/components/schemas/UserInfo",
            "title": "user_agent"
          }
        }
      },
      "CampaignLogsResponse": {
        "title": "CampaignLogsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationWithCursor",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CampaignLogResponse" }
          }
        }
      },
      "CampaignResponse": {
        "title": "CampaignResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignFullResponse",
            "title": "data"
          }
        }
      },
      "CampaignRevision": {
        "title": "CampaignRevision",
        "required": ["id", "date"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "date": { "title": "date", "type": "string" }
        }
      },
      "CampaignRevisionsResponse": {
        "title": "CampaignRevisionsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CampaignRevision" }
          }
        }
      },
      "CampaignStatResponse": {
        "title": "CampaignStatResponse",
        "required": [
          "active_emails",
          "bounces",
          "bounce_rate",
          "bounces_address_changed",
          "bounces_challenge_response",
          "bounces_dns_failure",
          "bounces_full_mailbox",
          "bounces_hard",
          "bounces_mail_blocked",
          "bounces_soft",
          "bounces_transient",
          "clicks",
          "click_rate",
          "clickthru_rate",
          "forwards",
          "implied_opens",
          "opens",
          "open_rate",
          "spams",
          "unique_clicks",
          "unique_opens",
          "unopens",
          "unopen_rate",
          "unsubscribes",
          "unsubscribe_rate",
          "spam_rate",
          "sent_emails",
          "sent_rate"
        ],
        "type": "object",
        "properties": {
          "active_emails": { "title": "active_emails", "type": "integer" },
          "bounces": { "title": "bounces", "type": "integer" },
          "bounce_rate": { "title": "bounce_rate", "type": "number" },
          "bounces_address_changed": {
            "title": "bounces_address_changed",
            "type": "integer"
          },
          "bounces_challenge_response": {
            "title": "bounces_challenge_response",
            "type": "integer"
          },
          "bounces_dns_failure": {
            "title": "bounces_dns_failure",
            "type": "integer"
          },
          "bounces_full_mailbox": {
            "title": "bounces_full_mailbox",
            "type": "integer"
          },
          "bounces_hard": { "title": "bounces_hard", "type": "integer" },
          "bounces_mail_blocked": {
            "title": "bounces_mail_blocked",
            "type": "integer"
          },
          "bounces_soft": { "title": "bounces_soft", "type": "integer" },
          "bounces_transient": {
            "title": "bounces_transient",
            "type": "integer"
          },
          "clicks": { "title": "clicks", "type": "integer" },
          "click_rate": { "title": "click_rate", "type": "number" },
          "clickthru_rate": { "title": "clickthru_rate", "type": "number" },
          "forwards": { "title": "forwards", "type": "integer" },
          "implied_opens": { "title": "implied_opens", "type": "integer" },
          "opens": { "title": "opens", "type": "integer" },
          "open_rate": { "title": "open_rate", "type": "number" },
          "spams": { "title": "spams", "type": "integer" },
          "unique_clicks": { "title": "unique_clicks", "type": "integer" },
          "unique_opens": { "title": "unique_opens", "type": "integer" },
          "unopens": { "title": "unopens", "type": "integer" },
          "unopen_rate": { "title": "unopen_rate", "type": "number" },
          "unsubscribes": { "title": "unsubscribes", "type": "integer" },
          "unsubscribe_rate": { "title": "unsubscribe_rate", "type": "number" },
          "spam_rate": { "title": "spam_rate", "type": "number" },
          "sent_emails": { "title": "sent_emails", "type": "integer" },
          "sent_rate": { "title": "sent_rate", "type": "number" }
        }
      },
      "CampaignStatsResponse": {
        "title": "CampaignStatsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignStatResponse",
            "title": "data"
          }
        }
      },
      "CampaignStatus": {
        "title": "CampaignStatus",
        "enum": [
          "active",
          "delivering",
          "delivered",
          "archived",
          "deleted",
          "incomplete",
          "scheduled"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CampaignSummaryResponse": {
        "title": "CampaignSummaryResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "audience": {
            "$ref": "#/components/schemas/AudienceSummaryResponse",
            "title": "audience"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignType",
            "title": "type"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "scheduled_for": { "title": "scheduled_for", "type": "integer" },
          "scheduled_on": { "title": "scheduled_on", "type": "integer" },
          "sender": {
            "$ref": "#/components/schemas/ListSenderResponse",
            "title": "sender"
          },
          "next_building_step": {
            "title": "next_building_step",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CampaignStatus",
            "title": "status"
          },
          "suspended": { "title": "suspended", "type": "boolean" },
          "web_email_link": { "title": "web_email_link", "type": "string" },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" },
          "updated_on": { "title": "updated_on", "type": "integer" }
        }
      },
      "CampaignType": {
        "title": "CampaignType",
        "enum": ["standard", "recurring", "absplit"],
        "type": "string",
        "description": "An enumeration."
      },
      "CampaignsResponse": {
        "title": "CampaignsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CampaignSummaryResponse" }
          }
        }
      },
      "CancelCampaignResponse": {
        "title": "CancelCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "cancelled": {
            "title": "cancelled",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ChangePassword": {
        "title": "ChangePassword",
        "required": ["new"],
        "type": "object",
        "properties": {
          "current": { "title": "current", "type": "string" },
          "new": { "title": "new", "minLength": 8, "type": "string" }
        }
      },
      "ConfirmAccount": {
        "title": "ConfirmAccount",
        "required": ["confirmation"],
        "type": "object",
        "properties": {
          "confirmation": { "title": "confirmation", "type": "string" }
        }
      },
      "ConfirmAccountResponse": {
        "title": "ConfirmAccountResponse",
        "required": ["id", "email"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "email": { "title": "email", "type": "string", "format": "email" },
          "data": {
            "$ref": "#/components/schemas/AccountFullResponse",
            "title": "data"
          },
          "metadata": { "title": "metadata", "type": "string" },
          "confirmed": {
            "title": "confirmed",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ConfirmSender": {
        "title": "ConfirmSender",
        "required": ["confirmation_id"],
        "type": "object",
        "properties": {
          "confirmation_id": {
            "title": "confirmation_id",
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ConfirmSenderResponse": {
        "title": "ConfirmSenderResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "confirmed": {
            "title": "confirmed",
            "type": "boolean",
            "default": true
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "sender"
          },
          "data": {
            "$ref": "#/components/schemas/SenderFullResponse",
            "title": "data"
          }
        }
      },
      "ConfirmUserResponse": {
        "title": "ConfirmUserResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "confirmed": {
            "title": "confirmed",
            "type": "boolean",
            "default": true
          },
          "data": {
            "$ref": "#/components/schemas/UserFullResponse",
            "title": "data"
          }
        }
      },
      "Contact": {
        "title": "Contact",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "custom_attributes": {
            "title": "custom_attributes",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomAttribute" }
          }
        }
      },
      "ContactFullResponse": {
        "title": "ContactFullResponse",
        "required": [
          "id",
          "email",
          "status",
          "subscribed_on",
          "last_bounce_type",
          "bounces_count",
          "custom_attributes"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "email": { "title": "email", "type": "string" },
          "status": { "title": "status", "type": "string" },
          "subscribed_on": { "title": "subscribed_on", "type": "integer" },
          "last_bounce_type": { "title": "last_bounce_type", "type": "string" },
          "bounces_count": { "title": "bounces_count", "type": "integer" },
          "custom_attributes": {
            "title": "custom_attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributesDataResponse"
            }
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" },
            "default": []
          },
          "interests": {
            "title": "interests",
            "type": "array",
            "items": { "type": "string" },
            "default": []
          }
        }
      },
      "ContactResponse": {
        "title": "ContactResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactFullResponse",
            "title": "data"
          }
        }
      },
      "ContactStatus": {
        "title": "import_to",
        "enum": ["active", "unsubscribed", "deleted"],
        "type": "string",
        "description": "An enumeration."
      },
      "ContactsExportDeleteResponse": {
        "title": "ContactsExportDeleteResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "contactsexport"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ContactsExportFullResponse",
            "title": "data"
          }
        }
      },
      "ContactsExportFullResponse": {
        "title": "ContactsExportFullResponse",
        "required": ["id", "status", "created_on", "expires_on", "progress"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/ContactsExportStatus",
            "title": "status"
          },
          "description": { "title": "description", "type": "string" },
          "segment_id": { "title": "segment_id", "type": "integer" },
          "filter": { "title": "filter", "type": "string" },
          "query": { "title": "query", "type": "string" },
          "fiql": { "title": "fiql", "type": "string" },
          "json": { "title": "json", "type": "object" },
          "created_on": { "title": "created_on", "type": "integer" },
          "expires_on": { "title": "expires_on", "type": "integer" },
          "progress": { "title": "progress", "type": "number" }
        }
      },
      "ContactsExportResponse": {
        "title": "ContactsExportResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactsExportFullResponse",
            "title": "data"
          }
        }
      },
      "ContactsExportStatus": {
        "title": "ContactsExportStatus",
        "enum": ["pending", "ready", "deleted", "failed"],
        "type": "string",
        "description": "An enumeration."
      },
      "ContactsExportsResponse": {
        "title": "ContactsExportsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactsExportFullResponse"
            }
          }
        }
      },
      "ContactsResponse": {
        "title": "ContactsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationWithCursor",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ContactFullResponse" }
          }
        }
      },
      "ContentType": {
        "title": "type",
        "enum": ["custom", "html", "bee"],
        "type": "string",
        "description": "An enumeration."
      },
      "ContentTypeResponse": {
        "title": "ContentTypeResponse",
        "enum": ["html", "bee", "custom"],
        "type": "string",
        "description": "An enumeration."
      },
      "CreateAccount": {
        "title": "CreateAccount",
        "required": ["name", "account_owner"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "address": {
            "title": "address",
            "allOf": [{ "$ref": "#/components/schemas/Address" }]
          },
          "account_owner": {
            "title": "account_owner",
            "allOf": [{ "$ref": "#/components/schemas/AccountOwnerUser" }]
          },
          "fax": { "title": "fax", "minLength": 1, "type": "string" },
          "phone": { "title": "phone", "minLength": 1, "type": "string" },
          "website": {
            "title": "website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "usage_limits": {
            "title": "usage_limits",
            "allOf": [{ "$ref": "#/components/schemas/UsageLimits" }],
            "default": {}
          },
          "domains": {
            "title": "domains",
            "allOf": [{ "$ref": "#/components/schemas/Domains" }],
            "default": {}
          },
          "trial": { "title": "trial", "type": "boolean", "default": false },
          "partner": { "title": "partner", "type": "boolean", "default": false }
        }
      },
      "CreateAccountResponse": {
        "title": "CreateAccountResponse",
        "required": ["id", "email"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "email": { "title": "email", "type": "string", "format": "email" },
          "data": {
            "$ref": "#/components/schemas/AccountFullResponse",
            "title": "data"
          },
          "metadata": { "title": "metadata", "type": "string" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "warnings": {
            "title": "warnings",
            "type": "array",
            "items": { "type": "object" },
            "default": []
          }
        }
      },
      "CreateActionResponse": {
        "title": "CreateActionResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "action"
          },
          "data": {
            "$ref": "#/components/schemas/ActionResponse",
            "title": "data"
          },
          "created": { "title": "created", "type": "boolean", "default": true }
        }
      },
      "CreateAttributeResponse": {
        "title": "CreateAttributeResponse",
        "required": ["name", "data"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "attribute"
          },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/CustomAttributeFullResponse",
            "title": "data"
          }
        }
      },
      "CreateCampaign": {
        "title": "CreateCampaign",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "audience": {
            "title": "audience",
            "allOf": [{ "$ref": "#/components/schemas/Audience" }],
            "default": {}
          },
          "tracking": {
            "title": "tracking",
            "allOf": [{ "$ref": "#/components/schemas/Tracking" }],
            "default": {
              "opens": true,
              "clicks_html": true,
              "clicks_text": true
            }
          },
          "sender": {
            "title": "sender",
            "allOf": [{ "$ref": "#/components/schemas/SenderAndName" }]
          },
          "reply_to_email": {
            "title": "reply_to_email",
            "type": "string",
            "description": "Specify a different reply-to email address than the sender",
            "format": "email"
          },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/CampaignContent" }],
            "default": { "type": "html" }
          }
        }
      },
      "CreateCampaignLogExportResponse": {
        "title": "CreateCampaignLogExportResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "task" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/CampaignLogExportFullResponse",
            "title": "data"
          }
        }
      },
      "CreateCampaignResponse": {
        "title": "CreateCampaignResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/CampaignFullResponse",
            "title": "data"
          }
        }
      },
      "CreateContactResponse": {
        "title": "CreateContactResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "contact"
          },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ContactFullResponse",
            "title": "data"
          }
        }
      },
      "CreateContactsExportResponse": {
        "title": "CreateContactsExportResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "task" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ContactsExportFullResponse",
            "title": "data"
          }
        }
      },
      "CreateCustomAttribute": {
        "title": "CreateCustomAttribute",
        "required": ["name", "type"],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "pattern": "^[A-Za-z0-9\\-_]+$",
            "type": "string",
            "description": "name"
          },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/CustomAttributeType" }]
          }
        }
      },
      "CreateDkim": {
        "title": "CreateDkim",
        "required": ["domain"],
        "type": "object",
        "properties": {
          "selector": { "title": "selector", "type": "string" },
          "domain": { "title": "domain", "type": "string" }
        }
      },
      "CreateDkimResponse": {
        "title": "CreateDkimResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": { "title": "object", "type": "string", "default": "dkim" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/DkimKeyFullResponse",
            "title": "data"
          }
        }
      },
      "CreateForm": {
        "title": "CreateForm",
        "required": ["name", "content", "list_id", "language"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "status": {
            "title": "status",
            "allOf": [{ "$ref": "#/components/schemas/FormStatus" }],
            "default": "active"
          },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/FormContent" }]
          },
          "redirections": {
            "title": "redirections",
            "allOf": [{ "$ref": "#/components/schemas/FormRedirections" }],
            "default": {}
          },
          "list_id": { "title": "list_id", "minimum": 1.0, "type": "integer" },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "double_opt_in": {
            "title": "double_opt_in",
            "type": "boolean",
            "default": true
          }
        }
      },
      "CreateFormResponse": {
        "title": "CreateFormResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "form" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/FormFullResponse",
            "title": "data"
          }
        }
      },
      "CreateListResponse": {
        "title": "CreateListResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ListFullResponse",
            "title": "data"
          }
        }
      },
      "CreateSegmentResponse": {
        "title": "CreateSegmentResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "segment"
          },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/SegmentFullResponse",
            "title": "data"
          }
        }
      },
      "CreateSender": {
        "title": "CreateSender",
        "required": ["name", "email"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "email": { "title": "email", "type": "string", "format": "email" },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }],
            "default": "en_US"
          }
        }
      },
      "CreateSenderResponse": {
        "title": "CreateSenderResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "object": {
            "title": "object",
            "type": "string",
            "default": "sender"
          },
          "data": {
            "$ref": "#/components/schemas/SenderFullResponse",
            "title": "data"
          }
        }
      },
      "CreateSuppressedEmailResponse": {
        "title": "CreateSuppressedEmailResponse",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string" },
          "created": { "title": "created", "type": "boolean", "default": true }
        }
      },
      "CreateTag": {
        "title": "CreateTag",
        "required": ["tag"],
        "type": "object",
        "properties": {
          "tag": {
            "title": "tag",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9.\\-+_]+$",
            "type": "string"
          }
        }
      },
      "CreateTagResponse": {
        "title": "CreateTagResponse",
        "required": ["tag"],
        "type": "object",
        "properties": {
          "tag": { "title": "tag", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "tag" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/TagFullResponse",
            "title": "data"
          }
        }
      },
      "CreateUserResponse": {
        "title": "CreateUserResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "created": { "title": "created", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/UserFullResponse",
            "title": "data"
          }
        }
      },
      "CreateWebhook": {
        "title": "CreateWebhook",
        "required": ["event", "url"],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventType",
            "title": "event"
          },
          "url": {
            "title": "url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "rate_limit": {
            "title": "rate_limit",
            "type": "integer",
            "default": 80
          },
          "rate_limit_period": {
            "allOf": [{ "$ref": "#/components/schemas/RateLimitPeriod" }],
            "default": "second",
            "title": "rate_limit_period"
          }
        }
      },
      "CreateWebhookResponse": {
        "title": "CreateWebhookResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "data": {
            "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook",
            "title": "data"
          }
        }
      },
      "CreateWorkflowResponse": {
        "title": "CreateWorkflowResponse",
        "required": ["data", "id"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowResponse",
            "title": "data"
          },
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "created": { "title": "created", "type": "boolean", "default": true }
        }
      },
      "Cursor": {
        "title": "Cursor",
        "type": "object",
        "properties": {
          "previous": { "title": "previous", "type": "string" },
          "next": { "title": "next", "type": "string" }
        }
      },
      "CustomAttribute": {
        "title": "CustomAttribute",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "value": { "title": "value", "type": "string" }
        }
      },
      "CustomAttributeFullResponse": {
        "title": "CustomAttributeFullResponse",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/CustomAttributeType" }]
          }
        },
        "description": "One List"
      },
      "CustomAttributeResponse": {
        "title": "CustomAttributeResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomAttributeFullResponse",
            "title": "data"
          }
        }
      },
      "CustomAttributeType": {
        "title": "type",
        "enum": ["text", "mediumtext", "integer", "timestamp", "datetime"],
        "type": "string",
        "description": "An enumeration."
      },
      "CustomAttributesDataResponse": {
        "title": "CustomAttributesDataResponse",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "value": { "title": "value", "type": "string" }
        }
      },
      "CustomAttributesResponse": {
        "title": "CustomAttributesResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeFullResponse"
            }
          }
        }
      },
      "DeactivateWorkflowResponse": {
        "title": "DeactivateWorkflowResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "deactivated": {
            "title": "deactivated",
            "type": "boolean",
            "default": true
          }
        }
      },
      "DeleteAccountResponse": {
        "title": "DeleteAccountResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteActionResponse": {
        "title": "DeleteActionResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "action"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ActionResponse",
            "title": "data"
          }
        }
      },
      "DeleteCampaignResponse": {
        "title": "DeleteCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteContactResponse": {
        "title": "DeleteContactResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "contact"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteCustomAttributeResponse": {
        "title": "DeleteCustomAttributeResponse",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "attribute"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteDkimKeyResponse": {
        "title": "DeleteDkimKeyResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": { "title": "object", "type": "string", "default": "dkim" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/DkimKeyFullResponse",
            "title": "data"
          }
        }
      },
      "DeleteFormResponse": {
        "title": "DeleteFormResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "form" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteListResponse": {
        "title": "DeleteListResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": { "title": "object", "type": "string", "default": "list" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteLogoResponse": {
        "title": "DeleteLogoResponse",
        "type": "object",
        "properties": {
          "object": { "title": "object", "type": "string", "default": "logo" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteSegmentResponse": {
        "title": "DeleteSegmentResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "segment"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteSenderResponse": {
        "title": "DeleteSenderResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true },
          "object": { "title": "object", "type": "string", "default": "sender" }
        }
      },
      "DeleteSuppressedEmailResponse": {
        "title": "DeleteSuppressedEmailResponse",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteTagResponse": {
        "title": "DeleteTagResponse",
        "required": ["tag"],
        "type": "object",
        "properties": {
          "tag": { "title": "tag", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "tag" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteTemplateResponse": {
        "title": "DeleteTemplateResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "template"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteUserResponse": {
        "title": "DeleteUserResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeleteWorkflowResponse": {
        "title": "DeleteWorkflowResponse",
        "required": ["data", "id"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowResponse",
            "title": "data"
          },
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "DeviceFamilyEnum": {
        "title": "DeviceFamilyEnum",
        "enum": ["pc", "mobile", "tablet"],
        "type": "string",
        "description": "An enumeration."
      },
      "DeviceInfo": {
        "title": "DeviceInfo",
        "type": "object",
        "properties": {
          "family": {
            "$ref": "#/components/schemas/DeviceFamilyEnum",
            "title": "family"
          },
          "brand": { "title": "brand", "type": "string" },
          "model": { "title": "model", "type": "string" }
        }
      },
      "DkimKeyFullResponse": {
        "title": "DkimKeyFullResponse",
        "required": ["id", "selector", "domain", "public_key"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "status": { "title": "status", "type": "string" },
          "selector": { "title": "selector", "type": "string" },
          "domain": { "title": "domain", "type": "string" },
          "public_key": { "title": "public_key", "type": "string" }
        }
      },
      "DkimKeyResponse": {
        "title": "DkimKeyResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DkimKeyFullResponse",
            "title": "data"
          }
        }
      },
      "DkimKeysResponse": {
        "title": "DkimKeysResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DkimKeyFullResponse" }
          }
        }
      },
      "DomainInstructionResponse": {
        "title": "DomainInstructionResponse",
        "required": ["entry", "valid"],
        "type": "object",
        "properties": {
          "entry": { "title": "entry", "type": "string" },
          "valid": { "title": "valid", "type": "boolean" }
        }
      },
      "Domains": {
        "title": "Domains",
        "type": "object",
        "properties": {
          "bounce": { "title": "bounce", "type": "string" },
          "tracking": {
            "title": "tracking",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "forward": {
            "title": "forward",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DomainsFullResponse": {
        "title": "DomainsFullResponse",
        "required": ["auth", "bounce", "dkim", "tracking"],
        "type": "object",
        "properties": {
          "auth": { "title": "auth", "type": "string" },
          "bounce": { "title": "bounce", "type": "string" },
          "dkim": { "title": "dkim", "type": "string" },
          "tracking": { "title": "tracking", "type": "string" }
        }
      },
      "DomainsInstructionResponse": {
        "title": "DomainsInstructionResponse",
        "required": ["bounce", "tracking"],
        "type": "object",
        "properties": {
          "bounce": {
            "title": "bounce",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainInstructionResponse"
            }
          },
          "tracking": {
            "title": "tracking",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainInstructionResponse"
            }
          }
        }
      },
      "DomainsResponse": {
        "title": "DomainsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DomainsFullResponse",
            "title": "data"
          }
        }
      },
      "DoubleOptIn": {
        "title": "DoubleOptIn",
        "enum": ["true", "false", "new", "not_active"],
        "type": "string",
        "description": "Default: 'false'\n\nSend a double opt-in/confirmation email\n  - __new__ : send only if the email is new to the list\n  - __not_active__ : send only if the contact is not already active\n  - __true__ : send the email regardless of contact status\n  - __false__ : do not send the email"
      },
      "DownloadCampaignLogExportFullResponse": {
        "title": "DownloadCampaignLogExportFullResponse",
        "required": ["expires_on", "url"],
        "type": "object",
        "properties": {
          "expires_on": { "title": "expires_on", "type": "integer" },
          "url": {
            "title": "url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DownloadCampaignLogExportResponse": {
        "title": "DownloadCampaignLogExportResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DownloadCampaignLogExportFullResponse",
            "title": "data"
          }
        }
      },
      "DownloadContactsExportFullResponse": {
        "title": "DownloadContactsExportFullResponse",
        "required": ["expires_on", "url"],
        "type": "object",
        "properties": {
          "expires_on": { "title": "expires_on", "type": "integer" },
          "url": {
            "title": "url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DownloadContactsExportResponse": {
        "title": "DownloadContactsExportResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DownloadContactsExportFullResponse",
            "title": "data"
          }
        }
      },
      "Email": {
        "title": "Email",
        "required": ["email", "sender", "content"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "group_id": {
            "title": "group_id",
            "minimum": 1.0,
            "type": "integer",
            "description": "Allows you to group multiple transaction emails together for analytics"
          },
          "tracking": {
            "title": "tracking",
            "allOf": [{ "$ref": "#/components/schemas/EmailTracking" }],
            "default": {
              "opens": true,
              "clicks_html": true,
              "clicks_text": true
            }
          },
          "sender": {
            "title": "sender",
            "allOf": [{ "$ref": "#/components/schemas/SenderAndName" }]
          },
          "additional_headers": {
            "title": "additional_headers",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalEmailHeader" }
          },
          "attachment": {
            "title": "attachment",
            "allOf": [{ "$ref": "#/components/schemas/Attachment" }]
          },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/EmailContent" }]
          }
        }
      },
      "EmailContent": {
        "title": "EmailContent",
        "required": ["subject", "encoding"],
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "minLength": 1, "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "template": {
            "title": "template",
            "allOf": [{ "$ref": "#/components/schemas/TemplateInfo" }]
          },
          "encoding": {
            "title": "encoding",
            "allOf": [{ "$ref": "#/components/schemas/Encoding" }]
          }
        }
      },
      "EmailLogResponse": {
        "title": "EmailLogResponse",
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "sent_id": {
            "title": "sent_id",
            "type": "integer",
            "deprecated": true
          },
          "email_id": { "title": "email_id", "type": "integer" },
          "group_id": { "title": "group_id", "type": "integer" },
          "email": { "title": "email", "type": "string" },
          "type": {
            "$ref": "#/components/schemas/EventTypeResponse",
            "title": "type"
          },
          "timestamp": { "title": "timestamp", "type": "integer" },
          "user_agent": {
            "$ref": "#/components/schemas/UserInfo",
            "title": "user_agent"
          },
          "clickthru_url": { "title": "clickthru_url", "type": "string" },
          "dsn_message": { "title": "dsn_message", "type": "string" },
          "sender_name": { "title": "sender_name", "type": "string" },
          "sender_email": { "title": "sender_email", "type": "string" },
          "source_ip": { "title": "source_ip", "type": "string" },
          "envelope_from": { "title": "envelope_from", "type": "string" },
          "additional_headers": {
            "title": "additional_headers",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalEmailHeader" }
          }
        }
      },
      "EmailLogsResponse": {
        "title": "EmailLogsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/EmailLogResponse" }
          }
        }
      },
      "EmailStatResponse": {
        "title": "EmailStatResponse",
        "required": [
          "date",
          "sent_emails",
          "open_rate",
          "bounce_rate",
          "click_rate",
          "spam_rate"
        ],
        "type": "object",
        "properties": {
          "date": { "title": "date", "type": "integer" },
          "sent_emails": { "title": "sent_emails", "type": "integer" },
          "open_rate": { "title": "open_rate", "type": "number" },
          "bounce_rate": { "title": "bounce_rate", "type": "number" },
          "click_rate": { "title": "click_rate", "type": "number" },
          "spam_rate": { "title": "spam_rate", "type": "number" }
        }
      },
      "EmailStatsResponse": {
        "title": "EmailStatsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/EmailStatResponse" }
          }
        }
      },
      "EmailTracking": {
        "title": "EmailTracking",
        "type": "object",
        "properties": {
          "opens": {
            "title": "opens",
            "type": "boolean",
            "description": "Enable the tracking of opens (only available for the HTML version)",
            "default": true
          },
          "clicks_html": {
            "title": "clicks_html",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the HTML version",
            "default": true
          },
          "clicks_text": {
            "title": "clicks_text",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the text version",
            "default": true
          }
        }
      },
      "Encoding": {
        "title": "encoding",
        "enum": [
          "utf-8",
          "armscii-8",
          "ascii",
          "big-5",
          "cp51932",
          "cp866",
          "cp936",
          "euc-cn",
          "euc-jp",
          "eucjp-win",
          "euc-kr",
          "euc-tw",
          "hz",
          "iso-2022-jp",
          "iso-2022-jp-ms",
          "iso-2022-kr",
          "iso-8859-1",
          "iso-8859-10",
          "iso-8859-13",
          "iso-8859-14",
          "iso-8859-15",
          "iso-8859-16",
          "iso-8859-2",
          "iso-8859-3",
          "iso-8859-4",
          "iso-8859-5",
          "iso-8859-6",
          "iso-8859-7",
          "iso-8859-8",
          "iso-8859-9",
          "jis",
          "koi8-r",
          "sjis",
          "sjis-win",
          "uhc",
          "windows-1251",
          "windows-1252"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EncodingResponse": {
        "title": "EncodingResponse",
        "enum": [
          "utf-8",
          "armscii-8",
          "ascii",
          "big-5",
          "cp51932",
          "cp866",
          "cp936",
          "euc-cn",
          "euc-jp",
          "eucjp-win",
          "euc-kr",
          "euc-tw",
          "hz",
          "iso-2022-jp",
          "iso-2022-jp-ms",
          "iso-2022-kr",
          "iso-8859-1",
          "iso-8859-10",
          "iso-8859-13",
          "iso-8859-14",
          "iso-8859-15",
          "iso-8859-16",
          "iso-8859-2",
          "iso-8859-3",
          "iso-8859-4",
          "iso-8859-5",
          "iso-8859-6",
          "iso-8859-7",
          "iso-8859-8",
          "iso-8859-9",
          "jis",
          "koi8-r",
          "sjis",
          "sjis-win",
          "uhc",
          "windows-1251",
          "windows-1252",
          "other"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EventType": {
        "title": "EventType",
        "enum": [
          "Account.Created",
          "Account.Updated",
          "Account.Confirmed",
          "Account.Deleted",
          "Contact.Added",
          "Contact.Updated",
          "Contact.Removed",
          "Contact.Tagged",
          "Contact.Untagged",
          "ContactsExport.Created",
          "ContactsExport.Deleted",
          "Campaign.Canceled",
          "Campaign.Created",
          "Campaign.Unscheduled",
          "Campaign.Updated",
          "Campaign.Resumed",
          "Campaign.Scheduled",
          "Campaign.Suspended",
          "CampaignLogExport.Created",
          "Email.Sent",
          "Email.Opened",
          "Email.Clicked",
          "Email.Bounced",
          "Email.ReportedAsSpam",
          "User.Created",
          "User.Deleted",
          "User.LoggedIn",
          "User.Updated",
          "List.Created",
          "List.Updated",
          "List.Deleted",
          "Segment.Created",
          "Segment.Updated",
          "Segment.Deleted",
          "Sender.Created",
          "Sender.Updated",
          "Sender.Deleted",
          "Sender.Confirmed",
          "Sender.ConfirmationEmailSent",
          "SuppressedEmail.Added",
          "SuppressedEmail.Removed"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EventTypeResponse": {
        "title": "EventTypeResponse",
        "enum": [
          "clickthru",
          "open",
          "bounce",
          "bounce_ac",
          "bounce_cr",
          "bounce_df",
          "bounce_fm",
          "bounce_hb",
          "bounce_mb",
          "bounce_sb",
          "bounce_tr",
          "bounce_ar",
          "forward",
          "skipped",
          "spam",
          "subscribe",
          "unsubscribe",
          "view",
          "share",
          "in_queue",
          "generating",
          "received",
          "sent",
          "schedule",
          "update",
          "global_unsubscribe",
          "unsub_reason",
          "other"
        ],
        "type": "string",
        "description": "exposed_string = database_string "
      },
      "ForbiddenMessage": {
        "title": "ForbiddenMessage",
        "required": ["msg"],
        "type": "object",
        "properties": {
          "code": { "title": "code", "type": "integer" },
          "msg": { "title": "msg", "type": "string" },
          "type": { "title": "type", "type": "string", "default": "forbidden" }
        }
      },
      "ForgotMyPassword": {
        "title": "ForgotMyPassword",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" }
        }
      },
      "FormContent": {
        "title": "FormContent",
        "type": "object",
        "properties": {
          "embedded": {
            "title": "embedded",
            "minLength": 1,
            "type": "string",
            "description": "The HTML content representing the form that can be embedded on a website"
          },
          "linked": {
            "title": "linked",
            "minLength": 1,
            "type": "string",
            "description": "The HTML content representing the hosted version of the form"
          }
        }
      },
      "FormContentResponse": {
        "title": "FormContentResponse",
        "type": "object",
        "properties": {
          "linked": { "title": "linked", "type": "string" },
          "embedded": { "title": "embedded", "type": "string" }
        }
      },
      "FormFullResponse": {
        "title": "FormFullResponse",
        "required": [
          "id",
          "name",
          "status",
          "content",
          "language",
          "url",
          "redirections"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "name": { "title": "name", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/FormStatus",
            "title": "status"
          },
          "content": {
            "$ref": "#/components/schemas/FormContentResponse",
            "title": "content"
          },
          "language": {
            "$ref": "#/components/schemas/Languages",
            "title": "language"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "last_updated_on": { "title": "last_updated_on", "type": "integer" },
          "url": {
            "$ref": "#/components/schemas/FormUrlsResponse",
            "title": "url"
          },
          "thumbnail": {
            "title": "thumbnail",
            "type": "string",
            "deprecated": true
          },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" },
          "redirections": {
            "$ref": "#/components/schemas/FormRedirectionsResponse",
            "title": "redirections"
          },
          "list_id": { "title": "list_id", "type": "integer" },
          "double_opt_in": { "title": "double_opt_in", "type": "boolean" }
        }
      },
      "FormRedirections": {
        "title": "FormRedirections",
        "type": "object",
        "properties": {
          "after_opt_in": {
            "title": "after_opt_in",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "after_double_opt_in": {
            "title": "after_double_opt_in",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "after_opt_out": {
            "title": "after_opt_out",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "FormRedirectionsResponse": {
        "title": "FormRedirectionsResponse",
        "type": "object",
        "properties": {
          "after_opt_in": { "title": "after_opt_in", "type": "string" },
          "after_double_opt_in": {
            "title": "after_double_opt_in",
            "type": "string"
          },
          "after_opt_out": { "title": "after_opt_out", "type": "string" }
        }
      },
      "FormResponse": {
        "title": "FormResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FormFullResponse",
            "title": "data"
          }
        }
      },
      "FormStatus": {
        "title": "status",
        "enum": ["active", "deleted"],
        "type": "string",
        "description": "An enumeration."
      },
      "FormUrlsResponse": {
        "title": "FormUrlsResponse",
        "type": "object",
        "properties": {
          "linked": { "title": "linked", "type": "string" },
          "embedded": { "title": "embedded", "type": "string" }
        }
      },
      "FormsResponse": {
        "title": "FormsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FormFullResponse" }
          }
        }
      },
      "GetActionResponse": {
        "title": "GetActionResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActionResponse",
            "title": "data"
          }
        }
      },
      "GetWorkflowResponse": {
        "title": "GetWorkflowResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowResponse",
            "title": "data"
          }
        }
      },
      "HTTPBadRequestError": {
        "title": "HTTPBadRequestError",
        "required": ["detail"],
        "type": "object",
        "properties": {
          "detail": {
            "title": "detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/BadRequestMessage" }
          }
        }
      },
      "HTTPForbiddenError": {
        "title": "HTTPForbiddenError",
        "required": ["detail"],
        "type": "object",
        "properties": {
          "detail": {
            "title": "detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ForbiddenMessage" }
          }
        }
      },
      "HTTPUnauthorizedError": {
        "title": "HTTPUnauthorizedError",
        "required": ["detail"],
        "type": "object",
        "properties": {
          "detail": {
            "title": "detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UnauthorizedMessage" }
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "ImportContactData": {
        "title": "ImportContactData",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "custom_attributes": {
            "title": "custom_attributes",
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomAttribute" }
          }
        }
      },
      "ImportContacts": {
        "title": "ImportContacts",
        "required": ["contacts"],
        "type": "object",
        "properties": {
          "import_to": {
            "title": "import_to",
            "allOf": [{ "$ref": "#/components/schemas/ContactStatus" }]
          },
          "contacts": {
            "title": "contacts",
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/ImportContactData" }
          }
        }
      },
      "ImportContactsResponse": {
        "title": "ImportContactsResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "import_id": {
            "title": "import_id",
            "type": "string",
            "format": "uuid4"
          },
          "id": {
            "title": "id",
            "type": "array",
            "items": { "type": "integer" }
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "contact"
          },
          "imported": {
            "title": "imported",
            "type": "boolean",
            "default": true
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ContactFullResponse" },
            "default": []
          }
        }
      },
      "InterestCreate": {
        "title": "InterestCreate",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
            "type": "string"
          },
          "alias": { "title": "alias", "type": "string" }
        }
      },
      "InterestCreatedResponse": {
        "title": "InterestCreatedResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "interest"
          },
          "data": {
            "$ref": "#/components/schemas/InterestFullResponse",
            "title": "data"
          },
          "created": { "title": "created", "type": "boolean", "default": true }
        }
      },
      "InterestDeletedResponse": {
        "title": "InterestDeletedResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "interest"
          },
          "data": {
            "$ref": "#/components/schemas/InterestFullResponse",
            "title": "data"
          },
          "deleted": { "title": "deleted", "type": "boolean", "default": true }
        }
      },
      "InterestFullResponse": {
        "title": "InterestFullResponse",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "alias": { "title": "alias", "type": "string" },
          "usage": { "title": "usage", "type": "integer" }
        }
      },
      "InterestPatch": {
        "title": "InterestPatch",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "alias": { "title": "alias", "type": "string" }
        }
      },
      "InterestPatchedResponse": {
        "title": "InterestPatchedResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "interest"
          },
          "data": {
            "$ref": "#/components/schemas/InterestFullResponse",
            "title": "data"
          },
          "patched": { "title": "patched", "type": "boolean", "default": true }
        }
      },
      "InterestResponse": {
        "title": "InterestResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InterestFullResponse",
            "title": "data"
          }
        }
      },
      "InterestsResponse": {
        "title": "InterestsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InterestFullResponse" }
          }
        }
      },
      "Languages": {
        "title": "language",
        "enum": [
          "da",
          "da_DK",
          "de",
          "de_DE",
          "el",
          "el_GR",
          "en",
          "en_US",
          "en_GB",
          "en_UK",
          "es",
          "es_US",
          "es_ES",
          "et",
          "et_EE",
          "fi",
          "fi_FI",
          "fr",
          "fr_CA",
          "fr_FR",
          "he",
          "he_IL",
          "id",
          "id_ID",
          "it",
          "it_IT",
          "ja",
          "ja_JP",
          "nl",
          "nl_NL",
          "no",
          "no_NO",
          "pt",
          "pt_BR",
          "ro",
          "ro_RO",
          "ru",
          "ru_RU",
          "sv",
          "sv_SE",
          "th",
          "th_TH",
          "tr",
          "tr_TR",
          "vi",
          "vi_VN",
          "zh",
          "zh_CN",
          "aa",
          "ab",
          "ae",
          "af",
          "ak",
          "am",
          "an",
          "ar",
          "av",
          "ay",
          "az",
          "ba",
          "be",
          "bg",
          "bh",
          "bi",
          "bm",
          "bn",
          "bo",
          "br",
          "bs",
          "ca",
          "ce",
          "ch",
          "co",
          "cr",
          "cs",
          "cu",
          "cv",
          "cy",
          "dv",
          "dz",
          "ee",
          "eo",
          "eu",
          "fa",
          "ff",
          "fj",
          "fo",
          "fy",
          "ga",
          "gd",
          "gl",
          "gn",
          "gu",
          "gv",
          "ha",
          "hi",
          "ho",
          "hr",
          "ht",
          "hu",
          "hy",
          "hz",
          "ia",
          "ie",
          "ig",
          "ii",
          "ik",
          "io",
          "is_IS",
          "iu",
          "jv",
          "ka",
          "kg",
          "ki",
          "kj",
          "kk",
          "kl",
          "km",
          "kn",
          "ko",
          "kr",
          "ks",
          "ku",
          "kv",
          "kw",
          "ky",
          "la",
          "lb",
          "lg",
          "li",
          "ln",
          "lo",
          "lt",
          "lu",
          "lv",
          "mg",
          "mh",
          "mi",
          "mk",
          "ml",
          "mn",
          "mr",
          "ms",
          "mt",
          "my",
          "na",
          "nb",
          "nd",
          "ne",
          "ng",
          "nn",
          "nr",
          "nv",
          "ny",
          "oc",
          "oj",
          "om",
          "os",
          "pa",
          "pi",
          "pl",
          "ps",
          "qu",
          "rm",
          "rn",
          "rw",
          "sa",
          "sc",
          "sd",
          "se",
          "sg",
          "si",
          "sk",
          "sl",
          "sm",
          "sn",
          "so",
          "sq",
          "sr",
          "ss",
          "st",
          "su",
          "sw",
          "ta",
          "te",
          "tg",
          "ti",
          "tk",
          "tl",
          "tn",
          "to",
          "ts",
          "tt",
          "tw",
          "ty",
          "ug",
          "uk",
          "ur",
          "uz",
          "ve",
          "vo",
          "wa",
          "wo",
          "xh",
          "yi",
          "yo",
          "za",
          "zu"
        ],
        "type": "string",
        "description": "Supported Locales"
      },
      "LinkFullResponse": {
        "title": "LinkFullResponse",
        "required": ["id", "status", "link_to"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "status": { "title": "status", "type": "string" },
          "link_to": { "title": "link_to", "type": "string" }
        }
      },
      "LinkInfoFullResponse": {
        "title": "LinkInfoFullResponse",
        "required": ["mailing_id"],
        "type": "object",
        "properties": {
          "mailing_id": { "title": "mailing_id", "type": "integer" }
        }
      },
      "LinkInfoResponse": {
        "title": "LinkInfoResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LinkInfoFullResponse",
            "title": "data"
          }
        }
      },
      "LinksResponse": {
        "title": "LinksResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LinkFullResponse" }
          }
        }
      },
      "List": {
        "title": "List",
        "required": ["name", "default_sender"],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "minLength": 1,
            "type": "string",
            "description": "List Name"
          },
          "default_sender": {
            "title": "default_sender",
            "allOf": [{ "$ref": "#/components/schemas/Sender" }]
          },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }],
            "default": "en_US"
          },
          "redirections": {
            "title": "redirections",
            "allOf": [{ "$ref": "#/components/schemas/Redirections" }],
            "default": {}
          },
          "webhook": {
            "title": "webhook",
            "allOf": [
              {
                "$ref": "#/components/schemas/api__schemas__requests__lists__Webhook"
              }
            ],
            "default": {}
          }
        }
      },
      "ListFullResponse": {
        "title": "ListFullResponse",
        "required": [
          "id",
          "name",
          "status",
          "language",
          "created_on",
          "default_sender",
          "redirections",
          "pages",
          "webhook"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "status": { "title": "status", "type": "string" },
          "policy_accepted": {
            "title": "policy_accepted",
            "type": "boolean",
            "default": false
          },
          "language": { "title": "language", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "default_sender": {
            "$ref": "#/components/schemas/ListSenderResponse",
            "title": "default_sender"
          },
          "redirections": {
            "$ref": "#/components/schemas/ListRedirectionsResponse",
            "title": "redirections"
          },
          "pages": {
            "$ref": "#/components/schemas/ListPagesResponse",
            "title": "pages"
          },
          "webhook": {
            "$ref": "#/components/schemas/ListWebhookResponse",
            "title": "webhook"
          }
        }
      },
      "ListLogResponse": {
        "title": "ListLogResponse",
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "contact_id": { "title": "contact_id", "type": "integer" },
          "email": { "title": "email", "type": "string" },
          "type": {
            "$ref": "#/components/schemas/EventTypeResponse",
            "title": "type"
          },
          "timestamp": { "title": "timestamp", "type": "integer" },
          "occurrences": { "title": "occurrences", "type": "integer" },
          "user_agent": {
            "$ref": "#/components/schemas/UserInfo",
            "title": "user_agent"
          },
          "campaign_id": { "title": "campaign_id", "type": "integer" },
          "clickthru_url": { "title": "clickthru_url", "type": "string" },
          "dsn_message": { "title": "dsn_message", "type": "string" },
          "unsub_reason": { "title": "unsub_reason", "type": "string" },
          "subscription_type": {
            "$ref": "#/components/schemas/SubscriptionTypeResponse",
            "title": "subscription_type"
          }
        }
      },
      "ListLogsResponse": {
        "title": "ListLogsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListLogResponse" }
          }
        }
      },
      "ListPagesResponse": {
        "title": "ListPagesResponse",
        "type": "object",
        "properties": {
          "opt_in": { "title": "opt_in", "type": "string" },
          "opt_out": { "title": "opt_out", "type": "string" },
          "subscribe": { "title": "subscribe", "type": "string" },
          "unsubscribe": { "title": "unsubscribe", "type": "string" }
        }
      },
      "ListRedirectionsResponse": {
        "title": "ListRedirectionsResponse",
        "type": "object",
        "properties": {
          "after_opt_in": { "title": "after_opt_in", "type": "string" },
          "after_double_opt_in": {
            "title": "after_double_opt_in",
            "type": "string"
          },
          "after_opt_out": { "title": "after_opt_out", "type": "string" }
        }
      },
      "ListResponse": {
        "title": "ListResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListFullResponse",
            "title": "data"
          }
        }
      },
      "ListSenderResponse": {
        "title": "ListSenderResponse",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "email": { "title": "email", "type": "string" }
        }
      },
      "ListStatResponse": {
        "title": "ListStatResponse",
        "required": [
          "active_contacts",
          "pending_contacts",
          "invalid_contacts",
          "unsubscribed_contacts",
          "flagged_contacts",
          "deleted_contacts",
          "sent_emails",
          "open_rate",
          "bounce_rate",
          "click_rate",
          "clickthru_rate",
          "unsubscribe_rate",
          "spam_rate"
        ],
        "type": "object",
        "properties": {
          "active_contacts": { "title": "active_contacts", "type": "integer" },
          "pending_contacts": {
            "title": "pending_contacts",
            "type": "integer"
          },
          "invalid_contacts": {
            "title": "invalid_contacts",
            "type": "integer"
          },
          "unsubscribed_contacts": {
            "title": "unsubscribed_contacts",
            "type": "integer"
          },
          "flagged_contacts": {
            "title": "flagged_contacts",
            "type": "integer"
          },
          "deleted_contacts": {
            "title": "deleted_contacts",
            "type": "integer"
          },
          "sent_emails": { "title": "sent_emails", "type": "integer" },
          "open_rate": { "title": "open_rate", "type": "number" },
          "bounce_rate": { "title": "bounce_rate", "type": "number" },
          "click_rate": { "title": "click_rate", "type": "number" },
          "clickthru_rate": { "title": "clickthru_rate", "type": "number" },
          "unsubscribe_rate": { "title": "unsubscribe_rate", "type": "number" },
          "spam_rate": { "title": "spam_rate", "type": "number" }
        }
      },
      "ListStatsResponse": {
        "title": "ListStatsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListStatResponse",
            "title": "data"
          }
        }
      },
      "ListSummaryResponse": {
        "title": "ListSummaryResponse",
        "required": ["id", "name", "status", "language", "default_sender"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "status": { "title": "status", "type": "string" },
          "language": { "title": "language", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "default_sender": {
            "$ref": "#/components/schemas/ListSenderResponse",
            "title": "default_sender"
          }
        }
      },
      "ListTasksResponse": {
        "title": "ListTasksResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskFullResponse" }
          }
        }
      },
      "ListWebhookAction": {
        "title": "actions",
        "enum": [
          "all",
          "subscribe",
          "unsubscribe",
          "update",
          "delete",
          "spam",
          "bounce",
          "bounce_ac",
          "bounce_cr",
          "bounce_df",
          "bounce_fm",
          "bounce_hb",
          "bounce_mb",
          "bounce_sb",
          "bounce_tr",
          "bounce_ar"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ListWebhookResponse": {
        "title": "ListWebhookResponse",
        "type": "object",
        "properties": {
          "url": { "title": "url", "type": "string" },
          "actions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListWebhookAction" },
            "title": "actions"
          }
        }
      },
      "ListWebhooksResponse": {
        "title": "ListWebhooksResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook"
            }
          }
        }
      },
      "ListWorkflowsResponse": {
        "title": "ListWorkflowsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WorkflowResponse" }
          }
        }
      },
      "ListsResponse": {
        "title": "ListsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListSummaryResponse" }
          }
        }
      },
      "LockWorkflow": {
        "title": "LockWorkflow",
        "required": ["key"],
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "pattern": "^[a-zA-Z0-9-_]{8,}$",
            "type": "string"
          }
        }
      },
      "LockWorkflowResponse": {
        "title": "LockWorkflowResponse",
        "required": ["locked", "expires_in"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "locked": { "title": "locked", "type": "boolean" },
          "expires_in": { "title": "expires_in", "type": "integer" }
        }
      },
      "LogType": {
        "title": "log_type",
        "enum": [
          "bounce",
          "clickthru",
          "sent",
          "open",
          "unsubscribe",
          "resubscribe"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "OperatingSystemInfo": {
        "title": "OperatingSystemInfo",
        "type": "object",
        "properties": {
          "family": { "title": "family", "type": "string" },
          "version": { "title": "version", "type": "string" }
        }
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "count": { "title": "count", "type": "integer" },
          "page": { "title": "page", "type": "integer", "default": 1 },
          "per_page": { "title": "per_page", "type": "integer" }
        },
        "description": "Pagination"
      },
      "PaginationWithCursor": {
        "title": "PaginationWithCursor",
        "type": "object",
        "properties": {
          "count": { "title": "count", "type": "integer" },
          "page": { "title": "page", "type": "integer", "default": 1 },
          "per_page": { "title": "per_page", "type": "integer" },
          "cursor": {
            "title": "cursor",
            "allOf": [{ "$ref": "#/components/schemas/Cursor" }]
          }
        },
        "description": "Pagination"
      },
      "PasswordGrantType": {
        "title": "grant_type",
        "enum": ["password"],
        "type": "string",
        "description": "An enumeration."
      },
      "PatchAccount": {
        "title": "PatchAccount",
        "type": "object",
        "properties": {
          "address": {
            "title": "address",
            "allOf": [{ "$ref": "#/components/schemas/Address" }]
          },
          "name": { "title": "name", "type": "string" },
          "account_owner": {
            "title": "account_owner",
            "allOf": [{ "$ref": "#/components/schemas/AccountOwner" }]
          },
          "fax": { "title": "fax", "type": "string" },
          "phone": { "title": "phone", "type": "string" },
          "domains": {
            "title": "domains",
            "allOf": [{ "$ref": "#/components/schemas/Domains" }],
            "default": {}
          },
          "website": {
            "title": "website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "usage_limits": {
            "title": "usage_limits",
            "allOf": [{ "$ref": "#/components/schemas/UsageLimits" }],
            "default": {}
          },
          "trial": { "title": "trial", "type": "boolean" },
          "partner": { "title": "partner", "type": "boolean" }
        }
      },
      "PatchAccountResponse": {
        "title": "PatchAccountResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountFullResponse",
            "title": "data"
          },
          "warnings": {
            "title": "warnings",
            "type": "array",
            "items": { "type": "object" },
            "default": []
          }
        }
      },
      "PatchAction": {
        "title": "PatchAction",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "parent_id": { "title": "parent_id", "type": "string" },
          "condition": {
            "$ref": "#/components/schemas/ActionCondition",
            "title": "condition"
          },
          "delay": { "title": "delay", "type": "integer" },
          "type": {
            "$ref": "#/components/schemas/ActionType",
            "title": "type"
          },
          "email_settings": {
            "$ref": "#/components/schemas/PatchActionEmailSettings",
            "title": "email_settings"
          }
        }
      },
      "PatchActionContent": {
        "title": "PatchActionContent",
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "minLength": 1, "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" },
          "type": {
            "$ref": "#/components/schemas/ContentType",
            "title": "type"
          },
          "encoding": {
            "$ref": "#/components/schemas/Encoding",
            "title": "encoding"
          }
        }
      },
      "PatchActionEmailSettings": {
        "title": "PatchActionEmailSettings",
        "type": "object",
        "properties": {
          "tracking": {
            "$ref": "#/components/schemas/PatchActionTracking",
            "title": "tracking"
          },
          "content": {
            "$ref": "#/components/schemas/PatchActionContent",
            "title": "content"
          },
          "sender": { "$ref": "#/components/schemas/Sender", "title": "sender" }
        }
      },
      "PatchActionResponse": {
        "title": "PatchActionResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "action"
          },
          "patched": { "title": "patched", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ActionResponse",
            "title": "data"
          }
        }
      },
      "PatchActionTracking": {
        "title": "PatchActionTracking",
        "type": "object",
        "properties": {
          "opens": { "title": "opens", "type": "boolean" },
          "clicks_html": { "title": "clicks_html", "type": "boolean" },
          "clicks_text": { "title": "clicks_text", "type": "boolean" }
        }
      },
      "PatchCampaign": {
        "title": "PatchCampaign",
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "audience": {
            "title": "audience",
            "allOf": [{ "$ref": "#/components/schemas/Audience" }],
            "default": {}
          },
          "tracking": {
            "title": "tracking",
            "allOf": [{ "$ref": "#/components/schemas/PatchTracking" }]
          },
          "sender": {
            "title": "sender",
            "allOf": [{ "$ref": "#/components/schemas/SenderAndName" }]
          },
          "reply_to_email": {
            "title": "reply_to_email",
            "type": "string",
            "description": "Specify a different reply-to email address than the sender",
            "format": "email"
          },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/PatchCampaignContent" }],
            "default": {}
          }
        }
      },
      "PatchCampaignContent": {
        "title": "PatchCampaignContent",
        "type": "object",
        "properties": {
          "subject": { "title": "subject", "minLength": 1, "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/ContentType" }]
          },
          "encoding": {
            "title": "encoding",
            "allOf": [{ "$ref": "#/components/schemas/Encoding" }]
          },
          "default_unsubscribe_link": {
            "title": "default_unsubscribe_link",
            "type": "boolean"
          }
        }
      },
      "PatchCampaignResponse": {
        "title": "PatchCampaignResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/CampaignFullResponse",
            "title": "data"
          }
        }
      },
      "PatchContact": {
        "title": "PatchContact",
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "custom_attributes": {
            "title": "custom_attributes",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomAttribute" }
          },
          "interests": {
            "title": "interests",
            "type": "array",
            "items": {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            }
          }
        }
      },
      "PatchContactResponse": {
        "title": "PatchContactResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "contact"
          },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ContactFullResponse",
            "title": "data"
          }
        }
      },
      "PatchDomains": {
        "title": "PatchDomains",
        "required": ["domains"],
        "type": "object",
        "properties": {
          "domains": {
            "title": "domains",
            "allOf": [{ "$ref": "#/components/schemas/Domains" }]
          }
        }
      },
      "PatchDomainsResponse": {
        "title": "PatchDomainsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "domains"
          },
          "patched": { "title": "patched", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/DomainsFullResponse",
            "title": "data"
          }
        }
      },
      "PatchForm": {
        "title": "PatchForm",
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "status": { "title": "status", "minLength": 1, "type": "string" },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/FormContent" }],
            "default": {}
          },
          "redirections": {
            "title": "redirections",
            "allOf": [{ "$ref": "#/components/schemas/FormRedirections" }],
            "default": {}
          },
          "list_id": { "title": "list_id", "minimum": 1.0, "type": "integer" },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "double_opt_in": { "title": "double_opt_in", "type": "boolean" }
        }
      },
      "PatchFormResponse": {
        "title": "PatchFormResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "form" },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/FormFullResponse",
            "title": "data"
          }
        }
      },
      "PatchListResponse": {
        "title": "PatchListResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/ListFullResponse",
            "title": "data"
          }
        }
      },
      "PatchSegmentResponse": {
        "title": "PatchSegmentResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "segment"
          },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/SegmentFullResponse",
            "title": "data"
          }
        }
      },
      "PatchSelfAccount": {
        "title": "PatchSelfAccount",
        "type": "object",
        "properties": {
          "address": {
            "title": "address",
            "allOf": [{ "$ref": "#/components/schemas/Address" }]
          },
          "name": { "title": "name", "type": "string" },
          "account_owner": {
            "title": "account_owner",
            "allOf": [{ "$ref": "#/components/schemas/AccountOwner" }]
          },
          "fax": { "title": "fax", "type": "string" },
          "phone": { "title": "phone", "type": "string" },
          "domains": {
            "title": "domains",
            "allOf": [{ "$ref": "#/components/schemas/Domains" }],
            "default": {}
          },
          "website": {
            "title": "website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PatchSenderResponse": {
        "title": "PatchSenderResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "object": {
            "title": "object",
            "type": "string",
            "default": "sender"
          },
          "data": {
            "$ref": "#/components/schemas/SenderFullResponse",
            "title": "data"
          }
        }
      },
      "PatchTag": {
        "title": "PatchTag",
        "required": ["tag"],
        "type": "object",
        "properties": {
          "tag": {
            "title": "tag",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9.\\-+_]+$",
            "type": "string"
          }
        }
      },
      "PatchTagResponse": {
        "title": "PatchTagResponse",
        "required": ["tag", "data"],
        "type": "object",
        "properties": {
          "tag": { "title": "tag", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "tag" },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/TagFullResponse",
            "title": "data"
          }
        }
      },
      "PatchTemplate": {
        "title": "PatchTemplate",
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/PatchTemplateContent" }]
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "PatchTemplateContent": {
        "title": "PatchTemplateContent",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/TemplateTypeEnum" }]
          },
          "subject": { "title": "subject", "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "PatchTemplateResponse": {
        "title": "PatchTemplateResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "template"
          },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/TemplateFullResponse",
            "title": "data"
          }
        }
      },
      "PatchTracking": {
        "title": "PatchTracking",
        "type": "object",
        "properties": {
          "opens": {
            "title": "opens",
            "type": "boolean",
            "description": "Enable the tracking of opens (only available for the HTML version)"
          },
          "clicks_html": {
            "title": "clicks_html",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the HTML version"
          },
          "clicks_text": {
            "title": "clicks_text",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the text version"
          },
          "additional_params": {
            "title": "additional_params",
            "minLength": 1,
            "type": "string",
            "description": "Append additional tracking parameters on all link (should be URL encoded)"
          }
        }
      },
      "PatchUser": {
        "title": "PatchUser",
        "type": "object",
        "properties": {
          "first_name": { "title": "first_name", "type": "string" },
          "last_name": { "title": "last_name", "type": "string" },
          "title": { "title": "title", "type": "string" },
          "office_phone": { "title": "office_phone", "type": "string" },
          "mobile_phone": {
            "title": "mobile_phone",
            "pattern": "[0-9]+",
            "type": "string"
          },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "Based on tz database"
          },
          "password": {
            "$ref": "#/components/schemas/ChangePassword",
            "title": "password"
          }
        }
      },
      "PatchUserResponse": {
        "title": "PatchUserResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "patched": { "title": "patched", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/UserFullResponse",
            "title": "data"
          }
        }
      },
      "PatchWebhook": {
        "title": "PatchWebhook",
        "type": "object",
        "properties": {
          "url": {
            "title": "url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "rate_limit": { "title": "rate_limit", "type": "integer" },
          "rate_limit_period": {
            "$ref": "#/components/schemas/RateLimitPeriod",
            "title": "rate_limit_period"
          }
        }
      },
      "PatchWebhookResponse": {
        "title": "PatchWebhookResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "data": {
            "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook",
            "title": "data"
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "Webhook"
          },
          "patched": { "title": "patched", "type": "boolean", "default": true }
        }
      },
      "PatchWorkflow": {
        "title": "PatchWorkflow",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "goal": { "title": "goal", "type": "string" },
          "description": { "title": "description", "type": "string" },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowTrigger",
            "title": "trigger"
          },
          "audience": {
            "$ref": "#/components/schemas/WorkflowAudience",
            "title": "audience"
          },
          "blueprint": {
            "$ref": "#/components/schemas/WorkflowFromBlueprint",
            "title": "blueprint"
          }
        }
      },
      "PatchWorkflowResponse": {
        "title": "PatchWorkflowResponse",
        "required": ["data", "id"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowResponse",
            "title": "data"
          },
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "patched": { "title": "patched", "type": "boolean", "default": true }
        }
      },
      "PutSystemEmailsResponse": {
        "title": "PutSystemEmailsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "systememails"
          },
          "updated": { "title": "updated", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/SystemEmailsTemplates",
            "title": "data"
          }
        }
      },
      "RateLimitPeriod": {
        "title": "RateLimitPeriod",
        "enum": ["second", "minute"],
        "type": "string",
        "description": "An enumeration."
      },
      "Redirections": {
        "title": "Redirections",
        "type": "object",
        "properties": {
          "after_opt_in": {
            "title": "after_opt_in",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Redirection after Opt In",
            "format": "uri"
          },
          "after_double_opt_in": {
            "title": "after_double_opt_in",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Redirection after Double Opt In",
            "format": "uri"
          },
          "after_opt_out": {
            "title": "after_opt_out",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Redirection after Opt Out",
            "format": "uri"
          }
        }
      },
      "RefreshGrantType": {
        "title": "grant_type",
        "enum": ["refresh_token"],
        "type": "string",
        "description": "An enumeration."
      },
      "RemoveInterestsFromContacts": {
        "title": "RemoveInterestsFromContacts",
        "required": ["interests"],
        "type": "object",
        "properties": {
          "interests": {
            "title": "interests",
            "maxItems": 16,
            "type": "array",
            "items": {
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[+@\\-_#a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          "contact_ids": {
            "title": "contact_ids",
            "minimum": 1.0,
            "maxItems": 1024,
            "type": "array",
            "items": { "minimum": 1.0, "type": "integer" }
          },
          "query": { "title": "query", "type": "string" },
          "fiql": { "title": "fiql", "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "RemoveInterestsFromMultipleContactsResponse": {
        "title": "RemoveInterestsFromMultipleContactsResponse",
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "interests"
          },
          "removed": { "title": "removed", "type": "boolean", "default": true }
        }
      },
      "RenderCampaignFullResponse": {
        "title": "RenderCampaignFullResponse",
        "type": "object",
        "properties": {
          "html": { "title": "html", "type": "string" },
          "text": { "title": "text", "type": "string" }
        }
      },
      "RenderCampaignResponse": {
        "title": "RenderCampaignResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RenderCampaignFullResponse",
            "title": "data"
          }
        }
      },
      "RequestedByUser": {
        "title": "RequestedByUser",
        "required": ["email", "id"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "id": { "title": "id", "type": "integer" }
        }
      },
      "ResendAccountVerificationEmailResponse": {
        "title": "ResendAccountVerificationEmailResponse",
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "verification_resent": {
            "title": "verification_resent",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ResendConfirmationEmailResponse": {
        "title": "ResendConfirmationEmailResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "resent": { "title": "resent", "type": "boolean", "default": true },
          "object": { "title": "object", "type": "string", "default": "sender" }
        }
      },
      "ResendUserVerificationEmailResponse": {
        "title": "ResendUserVerificationEmailResponse",
        "type": "object",
        "properties": {
          "object": { "title": "object", "type": "string", "default": "user" },
          "confirmation_resent": {
            "title": "confirmation_resent",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ResendVerificationEmail": {
        "title": "ResendVerificationEmail",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" }
        }
      },
      "ResetPasswordConfirm": {
        "title": "ResetPasswordConfirm",
        "required": ["token", "password"],
        "type": "object",
        "properties": {
          "token": { "title": "token", "type": "string" },
          "password": { "title": "password", "type": "string" }
        }
      },
      "ResetPasswordConfirmResponse": {
        "title": "ResetPasswordConfirmResponse",
        "type": "object",
        "properties": {
          "object": { "title": "object", "type": "string", "default": "user" },
          "password_reset": {
            "title": "password_reset",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ResetPasswordResponse": {
        "title": "ResetPasswordResponse",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "reset_link_sent": {
            "title": "reset_link_sent",
            "type": "boolean",
            "default": true
          }
        }
      },
      "ResetUserPassword": {
        "title": "ResetUserPassword",
        "type": "object",
        "properties": {
          "invalidate_current_password": {
            "title": "invalidate_current_password",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ResumeCampaignResponse": {
        "title": "ResumeCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "resumed": { "title": "resumed", "type": "boolean", "default": true }
        }
      },
      "ScheduleCampaign": {
        "title": "ScheduleCampaign",
        "type": "object",
        "properties": {
          "date": {
            "title": "date",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "A UNIX timestamp in the future"
          },
          "html_empty": {
            "title": "html_empty",
            "type": "boolean",
            "description": "Required to be true if the html message is empty",
            "default": false
          }
        }
      },
      "ScheduleCampaignResponse": {
        "title": "ScheduleCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "scheduled": {
            "title": "scheduled",
            "type": "boolean",
            "default": true
          }
        }
      },
      "Segment": {
        "title": "Segment",
        "required": ["name"],
        "type": "object",
        "properties": {
          "query": {
            "title": "query",
            "minLength": 1,
            "type": "string",
            "description": "SQL-like expression (use one of query, fiql and json)"
          },
          "fiql": {
            "title": "fiql",
            "minLength": 1,
            "type": "string",
            "description": "FIQL expression (use one of query, fiql and json)"
          },
          "json": {
            "title": "json",
            "type": "object",
            "description": "JSON expression (use one of query, fiql and json)"
          },
          "name": { "title": "name", "minLength": 1, "type": "string" }
        }
      },
      "SegmentFullResponse": {
        "title": "SegmentFullResponse",
        "required": [
          "id",
          "name",
          "campaigns_count",
          "last_used",
          "created_on"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "integer",
            "description": "Segment id"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "Segment name"
          },
          "query": {
            "title": "query",
            "type": "string",
            "description": "SQL-like expression"
          },
          "fiql": {
            "title": "fiql",
            "type": "string",
            "description": "FIQL expression"
          },
          "json": {
            "title": "json",
            "type": "object",
            "description": "JSON expression"
          },
          "campaigns_count": {
            "title": "campaigns_count",
            "type": "integer",
            "description": "Number of campaigns using this Segment"
          },
          "last_used": {
            "title": "last_used",
            "type": "integer",
            "description": "Last used date (Unix time)"
          },
          "created_on": {
            "title": "created_on",
            "type": "integer",
            "description": "Creation date (Unix time)"
          }
        }
      },
      "SegmentResponse": {
        "title": "SegmentResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentFullResponse",
            "title": "data"
          }
        }
      },
      "SegmentsResponse": {
        "title": "SegmentsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SegmentFullResponse" }
          }
        }
      },
      "SendEmailResponse": {
        "title": "SendEmailResponse",
        "required": ["email", "data"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "email" },
          "sent": { "title": "sent", "type": "boolean", "default": true },
          "data": {
            "$ref": "#/components/schemas/TransactionalEmailResponse",
            "title": "data"
          }
        }
      },
      "SendTestAction": {
        "title": "SendTestAction",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/TestEmailType" }],
            "default": "merged"
          }
        }
      },
      "SendTestActionResponse": {
        "title": "SendTestActionResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "action"
          },
          "sent": { "title": "sent", "type": "boolean", "default": true }
        }
      },
      "SendTestEmail": {
        "title": "SendTestEmail",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/TestEmailType" }],
            "default": "merged"
          }
        }
      },
      "SendTestEmailResponse": {
        "title": "SendTestEmailResponse",
        "required": ["email", "type"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string", "format": "email" },
          "type": {
            "$ref": "#/components/schemas/TestEmailType",
            "title": "type"
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "test_email"
          },
          "sent": { "title": "sent", "type": "boolean", "default": true }
        }
      },
      "Sender": {
        "title": "Sender",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "minLength": 1, "type": "string" }
        }
      },
      "SenderAndName": {
        "title": "SenderAndName",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "minLength": 1, "type": "string" },
          "name": { "title": "name", "minLength": 1, "type": "string" }
        }
      },
      "SenderFullResponse": {
        "title": "SenderFullResponse",
        "required": ["id", "name", "email", "confirmed"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "name": { "title": "name", "type": "string" },
          "email": { "title": "email", "type": "string" },
          "confirmed": { "title": "confirmed", "type": "boolean" },
          "confirmed_on": { "title": "confirmed_on", "type": "integer" },
          "language": {
            "allOf": [{ "$ref": "#/components/schemas/Languages" }],
            "default": "en_US",
            "title": "language"
          },
          "last_confirmation_sent_on": {
            "title": "last_confirmation_sent_on",
            "type": "integer"
          }
        }
      },
      "SenderResponse": {
        "title": "SenderResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SenderFullResponse",
            "title": "data"
          }
        }
      },
      "SendersResponse": {
        "title": "SendersResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SenderFullResponse" }
          }
        }
      },
      "SignatureHashFunction": {
        "title": "SignatureHashFunction",
        "enum": ["sha256"],
        "type": "string",
        "description": "An enumeration."
      },
      "SignatureInfo": {
        "title": "SignatureInfo",
        "required": ["hash_function"],
        "type": "object",
        "properties": {
          "key": { "title": "key", "type": "string" },
          "hash_function": {
            "$ref": "#/components/schemas/SignatureHashFunction",
            "title": "hash_function"
          }
        }
      },
      "SubscriptionTypeResponse": {
        "title": "SubscriptionTypeResponse",
        "enum": ["resubscribe", "subscription_confirmation"],
        "type": "string",
        "description": "An enumeration."
      },
      "SuppressedEmail": {
        "title": "SuppressedEmail",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "title": "email",
            "minLength": 1,
            "type": "string",
            "description": "Full email, a local part wildcard or a domain wildcard.  Examples: *@hotmail.com, john@*, john@hotmail.com"
          }
        }
      },
      "SuppressedEmailResponse": {
        "title": "SuppressedEmailResponse",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": { "title": "email", "type": "string" },
          "source": { "title": "source", "type": "string" }
        }
      },
      "SuppressedEmailsResponse": {
        "title": "SuppressedEmailsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SuppressedEmailResponse" }
          }
        }
      },
      "SuspendAccountResponse": {
        "title": "SuspendAccountResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "suspended": {
            "title": "suspended",
            "type": "boolean",
            "default": true
          },
          "data": {
            "$ref": "#/components/schemas/AccountSummaryResponse",
            "title": "data"
          }
        }
      },
      "SuspendCampaignResponse": {
        "title": "SuspendCampaignResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "campaign"
          },
          "suspended": {
            "title": "suspended",
            "type": "boolean",
            "default": true
          }
        }
      },
      "SuspendUserResponse": {
        "title": "SuspendUserResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "user" },
          "suspended": {
            "title": "suspended",
            "type": "boolean",
            "default": true
          },
          "data": {
            "$ref": "#/components/schemas/UserFullResponse",
            "title": "data"
          }
        }
      },
      "SystemEmailTemplate": {
        "title": "SystemEmailTemplate",
        "required": ["language", "template"],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/Languages",
            "title": "language"
          },
          "template": {
            "$ref": "#/components/schemas/TemplateId",
            "title": "template"
          },
          "sender": { "$ref": "#/components/schemas/Sender", "title": "sender" }
        }
      },
      "SystemEmailsResponse": {
        "title": "SystemEmailsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SystemEmailsTemplates",
            "title": "data"
          }
        }
      },
      "SystemEmailsTemplates": {
        "title": "SystemEmailsTemplates",
        "type": "object",
        "properties": {
          "account_confirm": {
            "title": "account_confirm",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SystemEmailTemplate" }
          },
          "user_confirm": {
            "title": "user_confirm",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SystemEmailTemplate" }
          },
          "sender_confirm": {
            "title": "sender_confirm",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SystemEmailTemplate" }
          },
          "password_reset": {
            "title": "password_reset",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SystemEmailTemplate" }
          }
        }
      },
      "TagContactResponse": {
        "title": "TagContactResponse",
        "type": "object",
        "properties": {
          "tagged": { "title": "tagged", "type": "boolean", "default": true }
        }
      },
      "TagFullResponse": {
        "title": "TagFullResponse",
        "required": ["tag"],
        "type": "object",
        "properties": { "tag": { "title": "tag", "type": "string" } }
      },
      "TagMultipleContacts": {
        "title": "TagMultipleContacts",
        "required": ["tags"],
        "type": "object",
        "properties": {
          "tags": {
            "title": "tags",
            "maxItems": 1024,
            "minItems": 1,
            "type": "array",
            "items": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            }
          },
          "contact_ids": {
            "title": "contact_ids",
            "minimum": 1.0,
            "maxItems": 1024,
            "minItems": 1,
            "type": "array",
            "items": { "minimum": 1.0, "type": "integer" }
          },
          "query": {
            "title": "query",
            "minLength": 1,
            "type": "string",
            "description": "SQL-like expression"
          },
          "fiql": { "title": "fiql", "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "TagMultipleContactsResponse": {
        "title": "TagMultipleContactsResponse",
        "type": "object",
        "properties": {
          "tagged": { "title": "tagged", "type": "boolean", "default": true }
        }
      },
      "TagResponse": {
        "title": "TagResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagFullResponse",
            "title": "data"
          }
        }
      },
      "Tags": {
        "title": "Tags",
        "required": ["tags"],
        "type": "object",
        "properties": {
          "tags": {
            "title": "tags",
            "maxItems": 1024,
            "minItems": 1,
            "type": "array",
            "items": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            }
          }
        }
      },
      "TagsResponse": {
        "title": "TagsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TagFullResponse" }
          }
        }
      },
      "TaskFullResponse": {
        "title": "TaskFullResponse",
        "required": [
          "id",
          "status",
          "created_on",
          "expires_on",
          "requested_by",
          "type",
          "payload"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/TaskStatus",
            "title": "status"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "expires_on": { "title": "expires_on", "type": "integer" },
          "progress": {
            "title": "progress",
            "minimum": 0.0,
            "type": "integer",
            "default": 0
          },
          "requested_by": {
            "$ref": "#/components/schemas/RequestedByUser",
            "title": "requested_by"
          },
          "type": { "$ref": "#/components/schemas/TaskType", "title": "type" },
          "description": { "title": "description", "type": "string" },
          "payload": { "title": "payload", "type": "object" }
        }
      },
      "TaskResponse": {
        "title": "TaskResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TaskFullResponse",
            "title": "data"
          }
        }
      },
      "TaskStatus": {
        "title": "TaskStatus",
        "enum": ["pending", "ready", "error", "deleted"],
        "type": "string",
        "description": "An enumeration."
      },
      "TaskType": {
        "title": "TaskType",
        "enum": ["contactsexport", "campaignlogexport"],
        "type": "string",
        "description": "An enumeration."
      },
      "Template": {
        "title": "Template",
        "required": ["name", "content"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "content": {
            "title": "content",
            "allOf": [{ "$ref": "#/components/schemas/TemplateContent" }]
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "TemplateContent": {
        "title": "TemplateContent",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "allOf": [{ "$ref": "#/components/schemas/TemplateTypeEnum" }]
          },
          "subject": { "title": "subject", "type": "string" },
          "html": { "title": "html", "minLength": 1, "type": "string" },
          "text": { "title": "text", "minLength": 1, "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "TemplateContentResponse": {
        "title": "TemplateContentResponse",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateTypeEnum",
            "title": "type"
          },
          "subject": { "title": "subject", "type": "string" },
          "html": { "title": "html", "type": "string" },
          "text": { "title": "text", "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "TemplateCreated": {
        "title": "TemplateCreated",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "template"
          },
          "created": { "title": "created", "type": "boolean", "default": true }
        }
      },
      "TemplateCustomAttributes": {
        "title": "TemplateCustomAttributes",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "value": { "title": "value", "type": "string" }
        }
      },
      "TemplateFullResponse": {
        "title": "TemplateFullResponse",
        "required": ["id", "name", "created_on", "updated_on", "content"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" }
          },
          "content": {
            "$ref": "#/components/schemas/TemplateContentResponse",
            "title": "content"
          }
        }
      },
      "TemplateId": {
        "title": "template",
        "required": ["id"],
        "type": "object",
        "properties": { "id": { "title": "id", "type": "integer" } }
      },
      "TemplateInfo": {
        "title": "template",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "custom_attributes": {
            "title": "custom_attributes",
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/TemplateCustomAttributes" }
          }
        }
      },
      "TemplateResponse": {
        "title": "TemplateResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateFullResponse",
            "title": "data"
          }
        }
      },
      "TemplateSummaryResponse": {
        "title": "TemplateSummaryResponse",
        "required": ["id", "name", "created_on", "updated_on"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "name": { "title": "name", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": { "type": "string" }
          },
          "thumbnail": {
            "title": "thumbnail",
            "type": "string",
            "deprecated": true
          },
          "thumbnail_url": { "title": "thumbnail_url", "type": "string" }
        }
      },
      "TemplateTypeEnum": {
        "title": "type",
        "enum": ["html", "text", "bee", "custom"],
        "type": "string",
        "description": "An enumeration."
      },
      "TemplatesResponse": {
        "title": "TemplatesResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TemplateSummaryResponse" }
          }
        }
      },
      "TestEmailType": {
        "title": "type",
        "enum": ["merged", "separated"],
        "type": "string",
        "description": "An enumeration."
      },
      "TokenResponse": {
        "title": "TokenResponse",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": { "title": "access_token", "type": "string" },
          "token_type": { "title": "token_type", "type": "string" },
          "expires_in": { "title": "expires_in", "type": "integer" },
          "refresh_token": { "title": "refresh_token", "type": "string" }
        }
      },
      "Tracking": {
        "title": "Tracking",
        "type": "object",
        "properties": {
          "opens": {
            "title": "opens",
            "type": "boolean",
            "description": "Enable the tracking of opens (only available for the HTML version)",
            "default": true
          },
          "clicks_html": {
            "title": "clicks_html",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the HTML version",
            "default": true
          },
          "clicks_text": {
            "title": "clicks_text",
            "type": "boolean",
            "description": "Enable the tracking of link clicks in the text version",
            "default": true
          },
          "additional_params": {
            "title": "additional_params",
            "minLength": 1,
            "type": "string",
            "description": "Append additional tracking parameters on all link (should be URL encoded)"
          }
        }
      },
      "TrackingResponse": {
        "title": "TrackingResponse",
        "type": "object",
        "properties": {
          "opens": { "title": "opens", "type": "boolean" },
          "clicks_html": { "title": "clicks_html", "type": "boolean" },
          "clicks_text": { "title": "clicks_text", "type": "boolean" },
          "additional_params": {
            "title": "additional_params",
            "type": "string"
          }
        }
      },
      "TransactionalEmailResponse": {
        "title": "TransactionalEmailResponse",
        "required": ["id"],
        "type": "object",
        "properties": { "id": { "title": "id", "type": "integer" } }
      },
      "UnArchiveWebhookResponse": {
        "title": "UnArchiveWebhookResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "data": {
            "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook",
            "title": "data"
          },
          "object": {
            "title": "object",
            "type": "string",
            "default": "Webhook"
          },
          "archived": {
            "title": "archived",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UnarchiveListResponse": {
        "title": "UnarchiveListResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "integer" },
          "object": { "title": "object", "type": "string", "default": "list" },
          "archived": {
            "title": "archived",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UnauthorizedMessage": {
        "title": "UnauthorizedMessage",
        "required": ["msg"],
        "type": "object",
        "properties": {
          "code": { "title": "code", "type": "integer" },
          "msg": { "title": "msg", "type": "string" },
          "type": {
            "title": "type",
            "type": "string",
            "default": "unauthorized"
          }
        }
      },
      "UnlockWorkflow": {
        "title": "UnlockWorkflow",
        "required": ["key"],
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "pattern": "^[a-zA-Z0-9-_]{8,}$",
            "type": "string"
          }
        }
      },
      "UnlockWorkflowResponse": {
        "title": "UnlockWorkflowResponse",
        "required": ["locked", "expires_in"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "workflow"
          },
          "locked": { "title": "locked", "type": "boolean" },
          "expires_in": { "title": "expires_in", "type": "integer" }
        }
      },
      "UnsubscribeContactResponse": {
        "title": "UnsubscribeContactResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "object": {
            "title": "object",
            "type": "string",
            "default": "contact"
          },
          "subscribed": {
            "title": "subscribed",
            "type": "boolean",
            "default": false
          },
          "data": {
            "$ref": "#/components/schemas/ContactFullResponse",
            "title": "data"
          }
        }
      },
      "UnsuspendAccountResponse": {
        "title": "UnsuspendAccountResponse",
        "required": ["id", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "object": {
            "title": "object",
            "type": "string",
            "default": "account"
          },
          "unsuspended": {
            "title": "unsuspended",
            "type": "boolean",
            "default": true
          },
          "data": {
            "$ref": "#/components/schemas/AccountSummaryResponse",
            "title": "data"
          }
        }
      },
      "UntagContactResponse": {
        "title": "UntagContactResponse",
        "type": "object",
        "properties": {
          "untagged": {
            "title": "untagged",
            "type": "boolean",
            "default": true
          }
        }
      },
      "UntagMultipleContacts": {
        "title": "UntagMultipleContacts",
        "required": ["tags"],
        "type": "object",
        "properties": {
          "tags": {
            "title": "tags",
            "maxItems": 1024,
            "minItems": 1,
            "type": "array",
            "items": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9.\\-+_]+$",
              "type": "string"
            }
          },
          "contact_ids": {
            "title": "contact_ids",
            "minimum": 1.0,
            "maxItems": 1024,
            "minItems": 1,
            "type": "array",
            "items": { "minimum": 1.0, "type": "integer" }
          },
          "query": {
            "title": "query",
            "minLength": 1,
            "type": "string",
            "description": "SQL-like expression"
          },
          "fiql": { "title": "fiql", "type": "string" },
          "json": { "title": "json", "type": "object" }
        }
      },
      "UntagMultipleContactsResponse": {
        "title": "UntagMultipleContactsResponse",
        "type": "object",
        "properties": {
          "untagged": {
            "title": "untagged",
            "type": "boolean",
            "default": true
          }
        }
      },
      "UpdateList": {
        "title": "UpdateList",
        "type": "object",
        "properties": {
          "name": { "title": "name", "minLength": 1, "type": "string" },
          "default_sender": {
            "title": "default_sender",
            "allOf": [{ "$ref": "#/components/schemas/Sender" }]
          },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "redirections": {
            "title": "redirections",
            "allOf": [{ "$ref": "#/components/schemas/Redirections" }],
            "default": {}
          },
          "webhook": {
            "title": "webhook",
            "allOf": [
              {
                "$ref": "#/components/schemas/api__schemas__requests__lists__Webhook"
              }
            ],
            "default": {}
          }
        }
      },
      "UpdateSegment": {
        "title": "UpdateSegment",
        "type": "object",
        "properties": {
          "query": {
            "title": "query",
            "minLength": 1,
            "type": "string",
            "description": "SQL-like expression (use one of query, fiql and json)"
          },
          "fiql": {
            "title": "fiql",
            "minLength": 1,
            "type": "string",
            "description": "FIQL expression (use one of query, fiql and json)"
          },
          "json": {
            "title": "json",
            "type": "object",
            "description": "JSON expression (use one of query, fiql and json)"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "Segment Name"
          }
        }
      },
      "UpdateSender": {
        "title": "UpdateSender",
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          }
        }
      },
      "UploadLogo": {
        "title": "UploadLogo",
        "required": ["file"],
        "type": "object",
        "properties": {
          "file": {
            "title": "file",
            "minLength": 1,
            "type": "string",
            "description": "Data URI scheme, base64 encoded"
          }
        }
      },
      "UploadLogoResponse": {
        "title": "UploadLogoResponse",
        "required": ["logo"],
        "type": "object",
        "properties": {
          "logo": { "title": "logo", "type": "string" },
          "object": { "title": "object", "type": "string", "default": "logo" },
          "uploaded": {
            "title": "uploaded",
            "type": "boolean",
            "default": true
          }
        }
      },
      "UsageLimits": {
        "title": "UsageLimits",
        "type": "object",
        "properties": {
          "starts_on": {
            "title": "starts_on",
            "minimum": 0.0,
            "type": "integer"
          },
          "per_campaign": {
            "title": "per_campaign",
            "minimum": 0.0,
            "type": "integer"
          },
          "per_month": {
            "title": "per_month",
            "minimum": 0.0,
            "type": "integer"
          },
          "maximum_contacts": {
            "title": "maximum_contacts",
            "minimum": 0.0,
            "type": "integer"
          },
          "lists": { "title": "lists", "minimum": -1.0, "type": "integer" },
          "users": { "title": "users", "minimum": -1.0, "type": "integer" },
          "campaign_blueprints": {
            "title": "campaign_blueprints",
            "minimum": -1.0,
            "type": "integer"
          },
          "automation_conditions": {
            "title": "automation_conditions",
            "minimum": -1.0,
            "type": "integer"
          },
          "use_campaign_blueprints": {
            "title": "use_campaign_blueprints",
            "type": "boolean"
          },
          "use_automation_conditions": {
            "title": "use_automation_conditions",
            "type": "boolean"
          },
          "use_automation_customwebhooks": {
            "title": "use_automation_customwebhooks",
            "type": "boolean"
          },
          "use_html_editor": { "title": "use_html_editor", "type": "boolean" },
          "use_contact_export": {
            "title": "use_contact_export",
            "type": "boolean"
          },
          "use_custom_merge_tags": {
            "title": "use_custom_merge_tags",
            "type": "boolean"
          },
          "use_list_redirection": {
            "title": "use_list_redirection",
            "type": "boolean"
          },
          "use_behavioral_segmentation": {
            "title": "use_behavioral_segmentation",
            "type": "boolean"
          },
          "use_ab_split": { "title": "use_ab_split", "type": "boolean" },
          "use_smart_email_resource": {
            "title": "use_smart_email_resource",
            "type": "boolean"
          },
          "use_smart_blueprint": {
            "title": "use_smart_blueprint",
            "type": "boolean"
          },
          "use_brand": { "title": "use_brand", "type": "boolean" },
          "insert_reseller_logo": {
            "title": "insert_reseller_logo",
            "type": "boolean"
          },
          "use_tags_in_automation": {
            "title": "use_tags_in_automation",
            "type": "boolean"
          },
          "use_tags": { "title": "use_tags", "type": "boolean" }
        }
      },
      "UsageLimitsResponse": {
        "title": "UsageLimitsResponse",
        "type": "object",
        "properties": {
          "starts_on": { "title": "starts_on", "type": "integer" },
          "per_campaign": { "title": "per_campaign", "type": "integer" },
          "per_month": { "title": "per_month", "type": "integer" },
          "maximum_contacts": {
            "title": "maximum_contacts",
            "type": "integer"
          },
          "lists": { "title": "lists", "type": "integer" },
          "users": { "title": "users", "type": "integer" },
          "campaign_blueprints": {
            "title": "campaign_blueprints",
            "type": "integer"
          },
          "automation_conditions": {
            "title": "automation_conditions",
            "type": "integer"
          },
          "use_campaign_blueprints": {
            "title": "use_campaign_blueprints",
            "type": "boolean"
          },
          "use_ab_split": { "title": "use_ab_split", "type": "boolean" },
          "use_automation_conditions": {
            "title": "use_automation_conditions",
            "type": "boolean"
          },
          "use_automation_customwebhooks": {
            "title": "use_automation_customwebhooks",
            "type": "boolean"
          },
          "use_html_editor": { "title": "use_html_editor", "type": "boolean" },
          "use_contact_export": {
            "title": "use_contact_export",
            "type": "boolean"
          },
          "use_custom_merge_tags": {
            "title": "use_custom_merge_tags",
            "type": "boolean"
          },
          "use_list_redirection": {
            "title": "use_list_redirection",
            "type": "boolean"
          },
          "use_behavioral_segmentation": {
            "title": "use_behavioral_segmentation",
            "type": "boolean"
          },
          "use_smart_email_resource": {
            "title": "use_smart_email_resource",
            "type": "boolean"
          },
          "use_smart_blueprint": {
            "title": "use_smart_blueprint",
            "type": "boolean"
          },
          "use_brand": { "title": "use_brand", "type": "boolean" },
          "use_tags_in_automation": {
            "title": "use_tags_in_automation",
            "type": "boolean"
          },
          "use_tags": { "title": "use_tags", "type": "boolean" },
          "insert_reseller_logo": {
            "title": "insert_reseller_logo",
            "type": "boolean"
          }
        }
      },
      "User": {
        "title": "User",
        "required": ["first_name", "last_name", "email"],
        "type": "object",
        "properties": {
          "first_name": { "title": "first_name", "type": "string" },
          "last_name": { "title": "last_name", "type": "string" },
          "title": { "title": "title", "type": "string" },
          "office_phone": { "title": "office_phone", "type": "string" },
          "mobile_phone": {
            "title": "mobile_phone",
            "pattern": "[0-9]+",
            "type": "string"
          },
          "language": {
            "title": "language",
            "allOf": [{ "$ref": "#/components/schemas/Languages" }]
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "Based on tz database"
          },
          "password": {
            "title": "password",
            "type": "string",
            "description": "New password (admin only)"
          },
          "email": { "title": "email", "type": "string", "format": "email" }
        }
      },
      "UserConfirmation": {
        "title": "UserConfirmation",
        "required": ["confirmation", "password"],
        "type": "object",
        "properties": {
          "confirmation": { "title": "confirmation", "type": "string" },
          "password": { "title": "password", "minLength": 8, "type": "string" }
        }
      },
      "UserFullResponse": {
        "title": "UserFullResponse",
        "required": ["id", "email", "status"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "email": { "title": "email", "type": "string" },
          "status": { "title": "status", "type": "string" },
          "created_on": { "title": "created_on", "type": "integer" },
          "last_activity_on": {
            "title": "last_activity_on",
            "type": "integer"
          },
          "expires_on": { "title": "expires_on", "type": "integer" },
          "first_name": { "title": "first_name", "type": "string" },
          "last_name": { "title": "last_name", "type": "string" },
          "title": { "title": "title", "type": "string" },
          "language": {
            "$ref": "#/components/schemas/Languages",
            "title": "language"
          },
          "timezone": { "title": "timezone", "type": "string" },
          "office_phone": { "title": "office_phone", "type": "string" },
          "mobile_phone": { "title": "mobile_phone", "type": "string" }
        }
      },
      "UserInfo": {
        "title": "UserInfo",
        "required": ["os", "browser", "device"],
        "type": "object",
        "properties": {
          "ip": { "title": "ip", "type": "string" },
          "os": {
            "$ref": "#/components/schemas/OperatingSystemInfo",
            "title": "os"
          },
          "browser": {
            "$ref": "#/components/schemas/BrowserInfo",
            "title": "browser"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo",
            "title": "device"
          },
          "is_bot": { "title": "is_bot", "type": "boolean" },
          "raw": { "title": "raw", "type": "string" }
        }
      },
      "UserResponse": {
        "title": "UserResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserFullResponse",
            "title": "data"
          }
        }
      },
      "UserSummaryResponse": {
        "title": "UserSummaryResponse",
        "required": ["id", "email"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "email": { "title": "email", "type": "string" },
          "status": { "title": "status", "type": "string" },
          "first_name": { "title": "first_name", "type": "string" },
          "last_name": { "title": "last_name", "type": "string" },
          "last_activity_on": {
            "title": "last_activity_on",
            "type": "integer"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "expires_on": { "title": "expires_on", "type": "integer" }
        }
      },
      "UsersResponse": {
        "title": "UsersResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserSummaryResponse" }
          }
        }
      },
      "ValidateDomainsResponse": {
        "title": "ValidateDomainsResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DomainsInstructionResponse",
            "title": "data"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "loc",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "msg", "type": "string" },
          "type": { "title": "type", "type": "string" }
        }
      },
      "WebhookResponse": {
        "title": "WebhookResponse",
        "required": ["id", "signature", "data"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "signature": {
            "$ref": "#/components/schemas/SignatureInfo",
            "title": "signature"
          },
          "data": {
            "$ref": "#/components/schemas/api__services__webhooks__schemas__Webhook",
            "title": "data"
          }
        }
      },
      "WebhookStatus": {
        "title": "WebhookStatus",
        "enum": ["active", "archived"],
        "type": "string",
        "description": "An enumeration."
      },
      "Workflow": {
        "title": "Workflow",
        "required": ["audience"],
        "type": "object",
        "properties": {
          "name": { "title": "name", "type": "string" },
          "goal": { "title": "goal", "type": "string" },
          "description": { "title": "description", "type": "string" },
          "trigger": {
            "allOf": [{ "$ref": "#/components/schemas/WorkflowTrigger" }],
            "default": "subscribed",
            "title": "trigger"
          },
          "audience": {
            "$ref": "#/components/schemas/WorkflowAudience",
            "title": "audience"
          },
          "blueprint": {
            "$ref": "#/components/schemas/WorkflowFromBlueprint",
            "title": "blueprint"
          }
        }
      },
      "WorkflowAudience": {
        "title": "WorkflowAudience",
        "required": ["list_id"],
        "type": "object",
        "properties": {
          "list_id": { "title": "list_id", "type": "integer" },
          "segment_id": { "title": "segment_id", "type": "integer" }
        }
      },
      "WorkflowBlueprint": {
        "title": "WorkflowBlueprint",
        "required": ["id", "name", "goal"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "name": { "title": "name", "type": "string" },
          "description": { "title": "description", "type": "string" },
          "goal": { "title": "goal", "type": "string" },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowTrigger",
            "title": "trigger"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" }
        }
      },
      "WorkflowBlueprintActionResponse": {
        "title": "WorkflowBlueprintActionResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActionBlueprint",
            "title": "data"
          }
        }
      },
      "WorkflowBlueprintResponse": {
        "title": "WorkflowBlueprintResponse",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowBlueprint",
            "title": "data"
          }
        }
      },
      "WorkflowBlueprintsResponse": {
        "title": "WorkflowBlueprintsResponse",
        "required": ["pagination", "data"],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "title": "pagination"
          },
          "data": {
            "title": "data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WorkflowBlueprint" }
          }
        }
      },
      "WorkflowFromBlueprint": {
        "title": "WorkflowFromBlueprint",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "email_settings": {
            "$ref": "#/components/schemas/ActionDefaultEmailSettings",
            "title": "email_settings"
          }
        }
      },
      "WorkflowResponse": {
        "title": "WorkflowResponse",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "name": { "title": "name", "type": "string" },
          "description": { "title": "description", "type": "string" },
          "goal": { "title": "goal", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "title": "status"
          },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowTrigger",
            "title": "trigger"
          },
          "audience": {
            "$ref": "#/components/schemas/WorkflowAudience",
            "title": "audience"
          },
          "created_on": { "title": "created_on", "type": "integer" },
          "updated_on": { "title": "updated_on", "type": "integer" },
          "activated_on": { "title": "activated_on", "type": "integer" }
        }
      },
      "WorkflowStatus": {
        "title": "status",
        "enum": ["active", "inactive"],
        "type": "string",
        "description": "An enumeration."
      },
      "WorkflowTrigger": {
        "title": "trigger",
        "enum": ["subscribed", "unsubscribed", "manual"],
        "type": "string",
        "description": "An enumeration."
      },
      "api__schemas__requests__lists__Webhook": {
        "title": "Webhook",
        "type": "object",
        "properties": {
          "url": {
            "title": "url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "actions": {
            "title": "actions",
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListWebhookAction" }
          }
        }
      },
      "api__services__webhooks__schemas__Webhook": {
        "title": "Webhook",
        "type": "object",
        "properties": {
          "id": { "title": "id", "type": "string" },
          "status": {
            "$ref": "#/components/schemas/WebhookStatus",
            "title": "status"
          },
          "event": {
            "$ref": "#/components/schemas/EventType",
            "title": "event"
          },
          "url": {
            "title": "url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "archived_at": { "title": "archived_at", "type": "integer" },
          "rate_limit": { "title": "rate_limit", "type": "integer" },
          "rate_limit_period": {
            "$ref": "#/components/schemas/RateLimitPeriod",
            "title": "rate_limit_period"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "user": "Grants read-write to customer endpoints",
              "admin": "Grants read-write to restricted endpoints",
              "internal": "Grants write access to internal endpoints"
            },
            "tokenUrl": "/token"
          }
        }
      }
    }
  },
  "x-proxy-enabled": false,
  "x-samples-languages": ["curl"]
}
